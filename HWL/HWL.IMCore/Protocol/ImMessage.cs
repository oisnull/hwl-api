// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: im_message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HWL.IMCore.Protocol {

  /// <summary>Holder for reflection information generated from im_message.proto</summary>
  public static partial class ImMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for im_message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ImMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBpbV9tZXNzYWdlLnByb3RvIoYBChBJbU1lc3NhZ2VDb250ZXh0EhwKBHR5",
            "cGUYASABKA4yDi5JbU1lc3NhZ2VUeXBlEiQKB3JlcXVlc3QYAiABKAsyES5J",
            "bU1lc3NhZ2VSZXF1ZXN0SAASJgoIcmVzcG9uc2UYAyABKAsyEi5JbU1lc3Nh",
            "Z2VSZXNwb25zZUgAQgYKBGJvZHki0QYKEEltTWVzc2FnZVJlcXVlc3QSKgoL",
            "cmVxdWVzdEhlYWQYASABKAsyFS5JbU1lc3NhZ2VSZXF1ZXN0SGVhZBI1ChN1",
            "c2VyVmFsaWRhdGVSZXF1ZXN0GAIgASgLMhYuSW1Vc2VyVmFsaWRhdGVSZXF1",
            "ZXN0SAASOwoWY2hhdFVzZXJNZXNzYWdlUmVxdWVzdBgDIAEoCzIZLkltQ2hh",
            "dFVzZXJNZXNzYWdlUmVxdWVzdEgAEj0KF2NoYXRHcm91cE1lc3NhZ2VSZXF1",
            "ZXN0GAQgASgLMhouSW1DaGF0R3JvdXBNZXNzYWdlUmVxdWVzdEgAEj0KF2hl",
            "YXJ0QmVhdE1lc3NhZ2VSZXF1ZXN0GAUgASgLMhouSW1IZWFydEJlYXRNZXNz",
            "YWdlUmVxdWVzdEgAEj0KF2FkZEZyaWVuZE1lc3NhZ2VSZXF1ZXN0GAYgASgL",
            "MhouSW1BZGRGcmllbmRNZXNzYWdlUmVxdWVzdEgAEkcKHHRlc3RDb25uZWN0",
            "aW9uTWVzc2FnZVJlcXVlc3QYByABKAsyHy5JbVRlc3RDb25uZWN0aW9uTWVz",
            "c2FnZVJlcXVlc3RIABIxChFhY2tNZXNzYWdlUmVxdWVzdBgIIAEoCzIULklt",
            "QWNrTWVzc2FnZVJlcXVlc3RIABJBChljaGF0U2V0dGluZ01lc3NhZ2VSZXF1",
            "ZXN0GAkgASgLMhwuSW1DaGF0U2V0dGluZ01lc3NhZ2VSZXF1ZXN0SAASQwoa",
            "Z3JvdXBPcGVyYXRlTWVzc2FnZVJlcXVlc3QYCiABKAsyHS5JbUdyb3VwT3Bl",
            "cmF0ZU1lc3NhZ2VSZXF1ZXN0SAASTQofbmVhckNpcmNsZU9wZXJhdGVNZXNz",
            "YWdlUmVxdWVzdBgLIAEoCzIiLkltTmVhckNpcmNsZU9wZXJhdGVNZXNzYWdl",
            "UmVxdWVzdEgAEkUKG2NpcmNsZU9wZXJhdGVNZXNzYWdlUmVxdWVzdBgMIAEo",
            "CzIeLkltQ2lyY2xlT3BlcmF0ZU1lc3NhZ2VSZXF1ZXN0SAASNwoUc3lzdGVt",
            "TWVzc2FnZVJlcXVlc3QYDSABKAsyFy5JbVN5c3RlbU1lc3NhZ2VSZXF1ZXN0",
            "SABCDQoLcmVxdWVzdEJvZHkibwoUSW1NZXNzYWdlUmVxdWVzdEhlYWQSEQoJ",
            "dGltZXN0YW1wGAEgASgEEg4KBmNsaWVudBgCIAEoCRIRCglzZXNzaW9uaWQY",
            "AyABKAkSEAoIbGFuZ3VhZ2UYBCABKAkSDwoHdmVyc2lvbhgFIAEoCSL3BQoR",
            "SW1NZXNzYWdlUmVzcG9uc2USLAoMcmVzcG9uc2VIZWFkGAEgASgLMhYuSW1N",
            "ZXNzYWdlUmVzcG9uc2VIZWFkEjcKFHVzZXJWYWxpZGF0ZVJlc3BvbnNlGAIg",
            "ASgLMhcuSW1Vc2VyVmFsaWRhdGVSZXNwb25zZUgAEj0KF2NoYXRVc2VyTWVz",
            "c2FnZVJlc3BvbnNlGAMgASgLMhouSW1DaGF0VXNlck1lc3NhZ2VSZXNwb25z",
            "ZUgAEj8KGGNoYXRHcm91cE1lc3NhZ2VSZXNwb25zZRgEIAEoCzIbLkltQ2hh",
            "dEdyb3VwTWVzc2FnZVJlc3BvbnNlSAASPwoYYWRkRnJpZW5kTWVzc2FnZVJl",
            "c3BvbnNlGAUgASgLMhsuSW1BZGRGcmllbmRNZXNzYWdlUmVzcG9uc2VIABJJ",
            "Ch10ZXN0Q29ubmVjdGlvbk1lc3NhZ2VSZXNwb25zZRgGIAEoCzIgLkltVGVz",
            "dENvbm5lY3Rpb25NZXNzYWdlUmVzcG9uc2VIABJDChpjaGF0U2V0dGluZ01l",
            "c3NhZ2VSZXNwb25zZRgHIAEoCzIdLkltQ2hhdFNldHRpbmdNZXNzYWdlUmVz",
            "cG9uc2VIABJFChtncm91cE9wZXJhdGVNZXNzYWdlUmVzcG9uc2UYCCABKAsy",
            "Hi5JbUdyb3VwT3BlcmF0ZU1lc3NhZ2VSZXNwb25zZUgAEk8KIG5lYXJDaXJj",
            "bGVPcGVyYXRlTWVzc2FnZVJlc3BvbnNlGAkgASgLMiMuSW1OZWFyQ2lyY2xl",
            "T3BlcmF0ZU1lc3NhZ2VSZXNwb25zZUgAEkcKHGNpcmNsZU9wZXJhdGVNZXNz",
            "YWdlUmVzcG9uc2UYCiABKAsyHy5JbUNpcmNsZU9wZXJhdGVNZXNzYWdlUmVz",
            "cG9uc2VIABI5ChVzeXN0ZW1NZXNzYWdlUmVzcG9uc2UYCyABKAsyGC5JbVN5",
            "c3RlbU1lc3NhZ2VSZXNwb25zZUgAQg4KDHJlc3BvbnNlQm9keSKCAQoVSW1N",
            "ZXNzYWdlUmVzcG9uc2VIZWFkEgwKBGNvZGUYASABKA0SDwoHbWVzc2FnZRgC",
            "IAEoCRINCgVpc2FjaxgDIAEoCBIRCgltZXNzYWdlaWQYBCABKAkSKAoGc291",
            "cmNlGAUgASgOMhguSW1NZXNzYWdlU291cmNlUG9zaXRpb24iSQoVSW1Vc2Vy",
            "VmFsaWRhdGVSZXF1ZXN0Eg4KBnVzZXJJZBgBIAEoBBINCgV0b2tlbhgCIAEo",
            "CRIRCgltZXNzYWdlaWQYAyABKAkiYQoWSW1Vc2VyVmFsaWRhdGVSZXNwb25z",
            "ZRIRCglpc1N1Y2Nlc3MYASABKAgSDwoHbWVzc2FnZRgCIAEoCRIQCghpc09u",
            "bGluZRgDIAEoCBIRCglzZXNzaW9uaWQYBCABKAkiVQoYSW1DaGF0VXNlck1l",
            "c3NhZ2VSZXF1ZXN0EjkKFmNoYXRVc2VyTWVzc2FnZUNvbnRlbnQYASABKAsy",
            "GS5JbUNoYXRVc2VyTWVzc2FnZUNvbnRlbnQiaQoZSW1DaGF0VXNlck1lc3Nh",
            "Z2VSZXNwb25zZRI5ChZjaGF0VXNlck1lc3NhZ2VDb250ZW50GAEgASgLMhku",
            "SW1DaGF0VXNlck1lc3NhZ2VDb250ZW50EhEKCWJ1aWxkVGltZRgCIAEoBCKX",
            "AgoYSW1DaGF0VXNlck1lc3NhZ2VDb250ZW50EhIKCmZyb21Vc2VySWQYASAB",
            "KAQSFAoMZnJvbVVzZXJOYW1lGAIgASgJEhUKDWZyb21Vc2VySW1hZ2UYAyAB",
            "KAkSEAoIdG9Vc2VySWQYBCABKAQSEwoLY29udGVudFR5cGUYBSABKA0SDwoH",
            "Y29udGVudBgGIAEoCRITCgtvcmlnaW5hbFVybBgHIAEoCRISCgpwcmV2aWV3",
            "VXJsGAggASgJEhIKCmltYWdlV2lkdGgYCSABKA0SEwoLaW1hZ2VIZWlnaHQY",
            "CiABKA0SDAoEc2l6ZRgLIAEoDRIQCghwbGF5VGltZRgMIAEoDRIQCghpc0Zy",
            "aWVuZBgNIAEoCCJYChlJbUNoYXRHcm91cE1lc3NhZ2VSZXF1ZXN0EjsKF2No",
            "YXRHcm91cE1lc3NhZ2VDb250ZW50GAEgASgLMhouSW1DaGF0R3JvdXBNZXNz",
            "YWdlQ29udGVudCJsChpJbUNoYXRHcm91cE1lc3NhZ2VSZXNwb25zZRI7Chdj",
            "aGF0R3JvdXBNZXNzYWdlQ29udGVudBgBIAEoCzIaLkltQ2hhdEdyb3VwTWVz",
            "c2FnZUNvbnRlbnQSEQoJYnVpbGRUaW1lGAIgASgEIpsCChlJbUNoYXRHcm91",
            "cE1lc3NhZ2VDb250ZW50EhIKCmZyb21Vc2VySWQYASABKAQSFAoMZnJvbVVz",
            "ZXJOYW1lGAIgASgJEhUKDWZyb21Vc2VySW1hZ2UYAyABKAkSEwoLdG9Hcm91",
            "cEd1aWQYBCABKAkSEwoLY29udGVudFR5cGUYBSABKA0SDwoHY29udGVudBgG",
            "IAEoCRITCgtvcmlnaW5hbFVybBgHIAEoCRISCgpwcmV2aWV3VXJsGAggASgJ",
            "EhIKCmltYWdlV2lkdGgYCSABKA0SEwoLaW1hZ2VIZWlnaHQYCiABKA0SDAoE",
            "c2l6ZRgLIAEoDRIQCghwbGF5VGltZRgMIAEoDRIQCghpc0ZyaWVuZBgNIAEo",
            "CCJEChlJbUhlYXJ0QmVhdE1lc3NhZ2VSZXF1ZXN0EhIKCmZyb21Vc2VySWQY",
            "ASABKAQSEwoLY3VycmVudFRpbWUYAiABKAQiWAoZSW1BZGRGcmllbmRNZXNz",
            "YWdlUmVxdWVzdBI7ChdhZGRGcmllbmRNZXNzYWdlQ29udGVudBgBIAEoCzIa",
            "LkltQWRkRnJpZW5kTWVzc2FnZUNvbnRlbnQibAoaSW1BZGRGcmllbmRNZXNz",
            "YWdlUmVzcG9uc2USOwoXYWRkRnJpZW5kTWVzc2FnZUNvbnRlbnQYASABKAsy",
            "Gi5JbUFkZEZyaWVuZE1lc3NhZ2VDb250ZW50EhEKCWJ1aWxkVGltZRgCIAEo",
            "BCKDAQoZSW1BZGRGcmllbmRNZXNzYWdlQ29udGVudBISCgpmcm9tVXNlcklk",
            "GAEgASgEEhQKDGZyb21Vc2VyTmFtZRgCIAEoCRIZChFmcm9tVXNlckhlYWRJ",
            "bWFnZRgDIAEoCRIQCgh0b1VzZXJJZBgEIAEoBBIPCgdjb250ZW50GAYgASgJ",
            "IkUKHkltVGVzdENvbm5lY3Rpb25NZXNzYWdlUmVxdWVzdBISCgpmcm9tVXNl",
            "cklkGAEgASgEEg8KB2NvbnRlbnQYAiABKAkiRAofSW1UZXN0Q29ubmVjdGlv",
            "bk1lc3NhZ2VSZXNwb25zZRIPCgdjb250ZW50GAEgASgJEhAKCHNlbmRUaW1l",
            "GAIgASgEIjwKE0ltQWNrTWVzc2FnZVJlcXVlc3QSEgoKZnJvbVVzZXJJZBgB",
            "IAEoBBIRCgltZXNzYWdlaWQYAiABKAkiXgobSW1DaGF0U2V0dGluZ01lc3Nh",
            "Z2VSZXF1ZXN0Ej8KGWNoYXRTZXR0aW5nTWVzc2FnZUNvbnRlbnQYASABKAsy",
            "HC5JbUNoYXRTZXR0aW5nTWVzc2FnZUNvbnRlbnQicgocSW1DaGF0U2V0dGlu",
            "Z01lc3NhZ2VSZXNwb25zZRI/ChljaGF0U2V0dGluZ01lc3NhZ2VDb250ZW50",
            "GAEgASgLMhwuSW1DaGF0U2V0dGluZ01lc3NhZ2VDb250ZW50EhEKCWJ1aWxk",
            "VGltZRgCIAEoBCKkAQobSW1DaGF0U2V0dGluZ01lc3NhZ2VDb250ZW50EicK",
            "C3NldHRpbmdUeXBlGAEgASgOMhIuSW1DaGF0U2V0dGluZ1R5cGUSIwoLc2V0",
            "dGluZ1VzZXIYAiABKAsyDi5JbVVzZXJDb250ZW50EhEKCWdyb3VwR3VpZBgD",
            "IAEoCRIRCglncm91cE5vdGUYBCABKAkSEQoJZ3JvdXBOYW1lGAUgASgJImEK",
            "HEltR3JvdXBPcGVyYXRlTWVzc2FnZVJlcXVlc3QSQQoaZ3JvdXBPcGVyYXRl",
            "TWVzc2FnZUNvbnRlbnQYASABKAsyHS5JbUdyb3VwT3BlcmF0ZU1lc3NhZ2VD",
            "b250ZW50InUKHUltR3JvdXBPcGVyYXRlTWVzc2FnZVJlc3BvbnNlEkEKGmdy",
            "b3VwT3BlcmF0ZU1lc3NhZ2VDb250ZW50GAEgASgLMh0uSW1Hcm91cE9wZXJh",
            "dGVNZXNzYWdlQ29udGVudBIRCglidWlsZFRpbWUYAiABKAQitwEKHEltR3Jv",
            "dXBPcGVyYXRlTWVzc2FnZUNvbnRlbnQSKAoLb3BlcmF0ZVR5cGUYASABKA4y",
            "Ey5JbUdyb3VwT3BlcmF0ZVR5cGUSIwoLb3BlcmF0ZVVzZXIYAiABKAsyDi5J",
            "bVVzZXJDb250ZW50EhEKCWdyb3VwR3VpZBgDIAEoCRIRCglncm91cE5hbWUY",
            "BCABKAkSIgoKZ3JvdXBVc2VycxgFIAMoCzIOLkltVXNlckNvbnRlbnQiXQoN",
            "SW1Vc2VyQ29udGVudBIOCgZ1c2VySWQYASABKAQSEAoIdXNlck5hbWUYAiAB",
            "KAkSEQoJdXNlckltYWdlGAMgASgJEhcKD2dyb3VwVXNlclJlbWFyaxgEIAEo",
            "CSJwCiFJbU5lYXJDaXJjbGVPcGVyYXRlTWVzc2FnZVJlcXVlc3QSSwofbmVh",
            "ckNpcmNsZU9wZXJhdGVNZXNzYWdlQ29udGVudBgBIAEoCzIiLkltTmVhckNp",
            "cmNsZU9wZXJhdGVNZXNzYWdlQ29udGVudCKEAQoiSW1OZWFyQ2lyY2xlT3Bl",
            "cmF0ZU1lc3NhZ2VSZXNwb25zZRJLCh9uZWFyQ2lyY2xlT3BlcmF0ZU1lc3Nh",
            "Z2VDb250ZW50GAEgASgLMiIuSW1OZWFyQ2lyY2xlT3BlcmF0ZU1lc3NhZ2VD",
            "b250ZW50EhEKCWJ1aWxkVGltZRgCIAEoBCL1AQohSW1OZWFyQ2lyY2xlT3Bl",
            "cmF0ZU1lc3NhZ2VDb250ZW50EikKC29wZXJhdGVUeXBlGAEgASgOMhQuSW1D",
            "aXJjbGVPcGVyYXRlVHlwZRIgCghwb3N0VXNlchgCIAEoCzIOLkltVXNlckNv",
            "bnRlbnQSIgoKb3JpZ2luVXNlchgDIAEoCzIOLkltVXNlckNvbnRlbnQSIQoJ",
            "cmVwbHlVc2VyGAQgASgLMg4uSW1Vc2VyQ29udGVudBIUCgxuZWFyQ2lyY2xl",
            "SWQYBSABKAQSEQoJY29tbWVudElkGAYgASgEEhMKC2NvbW1lbnRDb250GAcg",
            "ASgJImQKHUltQ2lyY2xlT3BlcmF0ZU1lc3NhZ2VSZXF1ZXN0EkMKG2NpcmNs",
            "ZU9wZXJhdGVNZXNzYWdlQ29udGVudBgBIAEoCzIeLkltQ2lyY2xlT3BlcmF0",
            "ZU1lc3NhZ2VDb250ZW50IngKHkltQ2lyY2xlT3BlcmF0ZU1lc3NhZ2VSZXNw",
            "b25zZRJDChtjaXJjbGVPcGVyYXRlTWVzc2FnZUNvbnRlbnQYASABKAsyHi5J",
            "bUNpcmNsZU9wZXJhdGVNZXNzYWdlQ29udGVudBIRCglidWlsZFRpbWUYAiAB",
            "KAQi7QEKHUltQ2lyY2xlT3BlcmF0ZU1lc3NhZ2VDb250ZW50EikKC29wZXJh",
            "dGVUeXBlGAEgASgOMhQuSW1DaXJjbGVPcGVyYXRlVHlwZRIgCghwb3N0VXNl",
            "chgCIAEoCzIOLkltVXNlckNvbnRlbnQSIgoKb3JpZ2luVXNlchgDIAEoCzIO",
            "LkltVXNlckNvbnRlbnQSIQoJcmVwbHlVc2VyGAQgASgLMg4uSW1Vc2VyQ29u",
            "dGVudBIQCghjaXJjbGVJZBgFIAEoBBIRCgljb21tZW50SWQYBiABKAQSEwoL",
            "Y29tbWVudENvbnQYByABKAkidgoWSW1TeXN0ZW1NZXNzYWdlUmVxdWVzdBIQ",
            "Cgh0b1VzZXJJZBgBIAEoBBITCgt0b0dyb3VwR3VpZBgCIAEoCRI1ChRzeXN0",
            "ZW1NZXNzYWdlQ29udGVudBgDIAEoCzIXLkltU3lzdGVtTWVzc2FnZUNvbnRl",
            "bnQiYwoXSW1TeXN0ZW1NZXNzYWdlUmVzcG9uc2USNQoUc3lzdGVtTWVzc2Fn",
            "ZUNvbnRlbnQYASABKAsyFy5JbVN5c3RlbU1lc3NhZ2VDb250ZW50EhEKCWJ1",
            "aWxkVGltZRgCIAEoBCJzChZJbVN5c3RlbU1lc3NhZ2VDb250ZW50Ei8KEXN5",
            "c3RlbU1lc3NhZ2VUeXBlGAEgASgOMhQuSW1TeXN0ZW1NZXNzYWdlVHlwZRIS",
            "Cgp0b1VzZXJEZXNjGAIgASgJEhQKDGFkZEdyb3VwRGVzYxgDIAEoCSrwAQoN",
            "SW1NZXNzYWdlVHlwZRIICgRCYXNlEAASEAoMVXNlclZhbGlkYXRlEAESDAoI",
            "Q2hhdFVzZXIQAhINCglDaGF0R3JvdXAQAxINCglIZWFydEJlYXQQBBINCglB",
            "ZGRGcmllbmQQBRISCg5UZXN0Q29ubmVjdGlvbhAGEhQKEENsaWVudEFja01l",
            "c3NhZ2UQBxIPCgtDaGF0U2V0dGluZxAIEhAKDEdyb3VwT3BlcmF0ZRAJEhUK",
            "EU5lYXJDaXJjbGVPcGVyYXRlEAoSEQoNQ2lyY2xlT3BlcmF0ZRALEhEKDVN5",
            "c3RlbU1lc3NhZ2UQDCpTChVJbU1lc3NhZ2VSZXNwb25zZUNvZGUSCQoFT3Ro",
            "ZXIQABILCgdTdWNjZXNzEGQSCwoGRmFpbGVkEMgBEhUKEFNlc3Npb25pZElu",
            "dmFsaWQQyQEqSQoXSW1NZXNzYWdlU291cmNlUG9zaXRpb24SCAoETm9uZRAA",
            "EgwKCFJlYWxUaW1lEAESCwoHT2ZmbGluZRACEgkKBVJldHJ5EAMqUgoRSW1D",
            "aGF0U2V0dGluZ1R5cGUSDwoLU2V0dGluZ05vbmUQABINCglHcm91cE5vdGUQ",
            "ARINCglHcm91cE5hbWUQAhIOCgpVc2VyUmVtYXJrEAMqeQoSSW1Hcm91cE9w",
            "ZXJhdGVUeXBlEhQKEEdyb3VwT3BlcmF0ZU5vbmUQABIPCgtDcmVhdGVHcm91",
            "cBABEg0KCUV4aXRHcm91cBACEhAKDERpc21pc3NHcm91cBADEgsKB0FkZFVz",
            "ZXIQBBIOCgpSZW1vdmVVc2VyEAUqcQoTSW1DaXJjbGVPcGVyYXRlVHlwZRIZ",
            "ChVOZWFyQ2lyY2xlT3BlcmF0ZU5vbmUQABILCgdBZGRMaWtlEAESDgoKQ2Fu",
            "Y2VsTGlrZRACEg8KC1Bvc3RDb21tZW50EAMSEQoNQ2FuY2VsQ29tbWVudBAE",
            "KicKE0ltU3lzdGVtTWVzc2FnZVR5cGUSEAoMQWRkTmVhckdyb3VwEABCMAoW",
            "Y29tLmh3bC5pbWNvcmUuaW1wcm90b1ABqgITSFdMLklNQ29yZS5Qcm90b2Nv",
            "bGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HWL.IMCore.Protocol.ImMessageType), typeof(global::HWL.IMCore.Protocol.ImMessageResponseCode), typeof(global::HWL.IMCore.Protocol.ImMessageSourcePosition), typeof(global::HWL.IMCore.Protocol.ImChatSettingType), typeof(global::HWL.IMCore.Protocol.ImGroupOperateType), typeof(global::HWL.IMCore.Protocol.ImCircleOperateType), typeof(global::HWL.IMCore.Protocol.ImSystemMessageType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImMessageContext), global::HWL.IMCore.Protocol.ImMessageContext.Parser, new[]{ "Type", "Request", "Response" }, new[]{ "Body" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImMessageRequest), global::HWL.IMCore.Protocol.ImMessageRequest.Parser, new[]{ "RequestHead", "UserValidateRequest", "ChatUserMessageRequest", "ChatGroupMessageRequest", "HeartBeatMessageRequest", "AddFriendMessageRequest", "TestConnectionMessageRequest", "AckMessageRequest", "ChatSettingMessageRequest", "GroupOperateMessageRequest", "NearCircleOperateMessageRequest", "CircleOperateMessageRequest", "SystemMessageRequest" }, new[]{ "RequestBody" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImMessageRequestHead), global::HWL.IMCore.Protocol.ImMessageRequestHead.Parser, new[]{ "Timestamp", "Client", "Sessionid", "Language", "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImMessageResponse), global::HWL.IMCore.Protocol.ImMessageResponse.Parser, new[]{ "ResponseHead", "UserValidateResponse", "ChatUserMessageResponse", "ChatGroupMessageResponse", "AddFriendMessageResponse", "TestConnectionMessageResponse", "ChatSettingMessageResponse", "GroupOperateMessageResponse", "NearCircleOperateMessageResponse", "CircleOperateMessageResponse", "SystemMessageResponse" }, new[]{ "ResponseBody" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImMessageResponseHead), global::HWL.IMCore.Protocol.ImMessageResponseHead.Parser, new[]{ "Code", "Message", "Isack", "Messageid", "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImUserValidateRequest), global::HWL.IMCore.Protocol.ImUserValidateRequest.Parser, new[]{ "UserId", "Token", "Messageid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImUserValidateResponse), global::HWL.IMCore.Protocol.ImUserValidateResponse.Parser, new[]{ "IsSuccess", "Message", "IsOnline", "Sessionid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImChatUserMessageRequest), global::HWL.IMCore.Protocol.ImChatUserMessageRequest.Parser, new[]{ "ChatUserMessageContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImChatUserMessageResponse), global::HWL.IMCore.Protocol.ImChatUserMessageResponse.Parser, new[]{ "ChatUserMessageContent", "BuildTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImChatUserMessageContent), global::HWL.IMCore.Protocol.ImChatUserMessageContent.Parser, new[]{ "FromUserId", "FromUserName", "FromUserImage", "ToUserId", "ContentType", "Content", "OriginalUrl", "PreviewUrl", "ImageWidth", "ImageHeight", "Size", "PlayTime", "IsFriend" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImChatGroupMessageRequest), global::HWL.IMCore.Protocol.ImChatGroupMessageRequest.Parser, new[]{ "ChatGroupMessageContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImChatGroupMessageResponse), global::HWL.IMCore.Protocol.ImChatGroupMessageResponse.Parser, new[]{ "ChatGroupMessageContent", "BuildTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImChatGroupMessageContent), global::HWL.IMCore.Protocol.ImChatGroupMessageContent.Parser, new[]{ "FromUserId", "FromUserName", "FromUserImage", "ToGroupGuid", "ContentType", "Content", "OriginalUrl", "PreviewUrl", "ImageWidth", "ImageHeight", "Size", "PlayTime", "IsFriend" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImHeartBeatMessageRequest), global::HWL.IMCore.Protocol.ImHeartBeatMessageRequest.Parser, new[]{ "FromUserId", "CurrentTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImAddFriendMessageRequest), global::HWL.IMCore.Protocol.ImAddFriendMessageRequest.Parser, new[]{ "AddFriendMessageContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImAddFriendMessageResponse), global::HWL.IMCore.Protocol.ImAddFriendMessageResponse.Parser, new[]{ "AddFriendMessageContent", "BuildTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImAddFriendMessageContent), global::HWL.IMCore.Protocol.ImAddFriendMessageContent.Parser, new[]{ "FromUserId", "FromUserName", "FromUserHeadImage", "ToUserId", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImTestConnectionMessageRequest), global::HWL.IMCore.Protocol.ImTestConnectionMessageRequest.Parser, new[]{ "FromUserId", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImTestConnectionMessageResponse), global::HWL.IMCore.Protocol.ImTestConnectionMessageResponse.Parser, new[]{ "Content", "SendTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImAckMessageRequest), global::HWL.IMCore.Protocol.ImAckMessageRequest.Parser, new[]{ "FromUserId", "Messageid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImChatSettingMessageRequest), global::HWL.IMCore.Protocol.ImChatSettingMessageRequest.Parser, new[]{ "ChatSettingMessageContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImChatSettingMessageResponse), global::HWL.IMCore.Protocol.ImChatSettingMessageResponse.Parser, new[]{ "ChatSettingMessageContent", "BuildTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImChatSettingMessageContent), global::HWL.IMCore.Protocol.ImChatSettingMessageContent.Parser, new[]{ "SettingType", "SettingUser", "GroupGuid", "GroupNote", "GroupName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImGroupOperateMessageRequest), global::HWL.IMCore.Protocol.ImGroupOperateMessageRequest.Parser, new[]{ "GroupOperateMessageContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImGroupOperateMessageResponse), global::HWL.IMCore.Protocol.ImGroupOperateMessageResponse.Parser, new[]{ "GroupOperateMessageContent", "BuildTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImGroupOperateMessageContent), global::HWL.IMCore.Protocol.ImGroupOperateMessageContent.Parser, new[]{ "OperateType", "OperateUser", "GroupGuid", "GroupName", "GroupUsers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImUserContent), global::HWL.IMCore.Protocol.ImUserContent.Parser, new[]{ "UserId", "UserName", "UserImage", "GroupUserRemark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImNearCircleOperateMessageRequest), global::HWL.IMCore.Protocol.ImNearCircleOperateMessageRequest.Parser, new[]{ "NearCircleOperateMessageContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImNearCircleOperateMessageResponse), global::HWL.IMCore.Protocol.ImNearCircleOperateMessageResponse.Parser, new[]{ "NearCircleOperateMessageContent", "BuildTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImNearCircleOperateMessageContent), global::HWL.IMCore.Protocol.ImNearCircleOperateMessageContent.Parser, new[]{ "OperateType", "PostUser", "OriginUser", "ReplyUser", "NearCircleId", "CommentId", "CommentCont" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImCircleOperateMessageRequest), global::HWL.IMCore.Protocol.ImCircleOperateMessageRequest.Parser, new[]{ "CircleOperateMessageContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImCircleOperateMessageResponse), global::HWL.IMCore.Protocol.ImCircleOperateMessageResponse.Parser, new[]{ "CircleOperateMessageContent", "BuildTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImCircleOperateMessageContent), global::HWL.IMCore.Protocol.ImCircleOperateMessageContent.Parser, new[]{ "OperateType", "PostUser", "OriginUser", "ReplyUser", "CircleId", "CommentId", "CommentCont" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImSystemMessageRequest), global::HWL.IMCore.Protocol.ImSystemMessageRequest.Parser, new[]{ "ToUserId", "ToGroupGuid", "SystemMessageContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImSystemMessageResponse), global::HWL.IMCore.Protocol.ImSystemMessageResponse.Parser, new[]{ "SystemMessageContent", "BuildTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HWL.IMCore.Protocol.ImSystemMessageContent), global::HWL.IMCore.Protocol.ImSystemMessageContent.Parser, new[]{ "SystemMessageType", "ToUserDesc", "AddGroupDesc" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ImMessageType {
    [pbr::OriginalName("Base")] Base = 0,
    [pbr::OriginalName("UserValidate")] UserValidate = 1,
    [pbr::OriginalName("ChatUser")] ChatUser = 2,
    [pbr::OriginalName("ChatGroup")] ChatGroup = 3,
    [pbr::OriginalName("HeartBeat")] HeartBeat = 4,
    [pbr::OriginalName("AddFriend")] AddFriend = 5,
    [pbr::OriginalName("TestConnection")] TestConnection = 6,
    [pbr::OriginalName("ClientAckMessage")] ClientAckMessage = 7,
    [pbr::OriginalName("ChatSetting")] ChatSetting = 8,
    [pbr::OriginalName("GroupOperate")] GroupOperate = 9,
    [pbr::OriginalName("NearCircleOperate")] NearCircleOperate = 10,
    [pbr::OriginalName("CircleOperate")] CircleOperate = 11,
    [pbr::OriginalName("SystemMessage")] SystemMessage = 12,
  }

  public enum ImMessageResponseCode {
    [pbr::OriginalName("Other")] Other = 0,
    [pbr::OriginalName("Success")] Success = 100,
    [pbr::OriginalName("Failed")] Failed = 200,
    [pbr::OriginalName("SessionidInvalid")] SessionidInvalid = 201,
  }

  public enum ImMessageSourcePosition {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("RealTime")] RealTime = 1,
    [pbr::OriginalName("Offline")] Offline = 2,
    [pbr::OriginalName("Retry")] Retry = 3,
  }

  public enum ImChatSettingType {
    [pbr::OriginalName("SettingNone")] SettingNone = 0,
    [pbr::OriginalName("GroupNote")] GroupNote = 1,
    [pbr::OriginalName("GroupName")] GroupName = 2,
    [pbr::OriginalName("UserRemark")] UserRemark = 3,
  }

  public enum ImGroupOperateType {
    [pbr::OriginalName("GroupOperateNone")] GroupOperateNone = 0,
    [pbr::OriginalName("CreateGroup")] CreateGroup = 1,
    [pbr::OriginalName("ExitGroup")] ExitGroup = 2,
    [pbr::OriginalName("DismissGroup")] DismissGroup = 3,
    [pbr::OriginalName("AddUser")] AddUser = 4,
    [pbr::OriginalName("RemoveUser")] RemoveUser = 5,
  }

  /// <summary>
  ///near circle operate message
  /// </summary>
  public enum ImCircleOperateType {
    [pbr::OriginalName("NearCircleOperateNone")] NearCircleOperateNone = 0,
    [pbr::OriginalName("AddLike")] AddLike = 1,
    [pbr::OriginalName("CancelLike")] CancelLike = 2,
    [pbr::OriginalName("PostComment")] PostComment = 3,
    [pbr::OriginalName("CancelComment")] CancelComment = 4,
  }

  /// <summary>
  ///system message
  /// </summary>
  public enum ImSystemMessageType {
    [pbr::OriginalName("AddNearGroup")] AddNearGroup = 0,
  }

  #endregion

  #region Messages
  /// <summary>
  ///context body
  /// </summary>
  public sealed partial class ImMessageContext : pb::IMessage<ImMessageContext> {
    private static readonly pb::MessageParser<ImMessageContext> _parser = new pb::MessageParser<ImMessageContext>(() => new ImMessageContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImMessageContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageContext(ImMessageContext other) : this() {
      type_ = other.type_;
      switch (other.BodyCase) {
        case BodyOneofCase.Request:
          Request = other.Request.Clone();
          break;
        case BodyOneofCase.Response:
          Response = other.Response.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageContext Clone() {
      return new ImMessageContext(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImMessageType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImMessageType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImMessageRequest Request {
      get { return bodyCase_ == BodyOneofCase.Request ? (global::HWL.IMCore.Protocol.ImMessageRequest) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.Request;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImMessageResponse Response {
      get { return bodyCase_ == BodyOneofCase.Response ? (global::HWL.IMCore.Protocol.ImMessageResponse) body_ : null; }
      set {
        body_ = value;
        bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.Response;
      }
    }

    private object body_;
    /// <summary>Enum of possible cases for the "body" oneof.</summary>
    public enum BodyOneofCase {
      None = 0,
      Request = 2,
      Response = 3,
    }
    private BodyOneofCase bodyCase_ = BodyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BodyOneofCase BodyCase {
      get { return bodyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBody() {
      bodyCase_ = BodyOneofCase.None;
      body_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImMessageContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImMessageContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      if (BodyCase != other.BodyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (bodyCase_ == BodyOneofCase.Request) hash ^= Request.GetHashCode();
      if (bodyCase_ == BodyOneofCase.Response) hash ^= Response.GetHashCode();
      hash ^= (int) bodyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (bodyCase_ == BodyOneofCase.Request) {
        output.WriteRawTag(18);
        output.WriteMessage(Request);
      }
      if (bodyCase_ == BodyOneofCase.Response) {
        output.WriteRawTag(26);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (bodyCase_ == BodyOneofCase.Request) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (bodyCase_ == BodyOneofCase.Response) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImMessageContext other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      switch (other.BodyCase) {
        case BodyOneofCase.Request:
          if (Request == null) {
            Request = new global::HWL.IMCore.Protocol.ImMessageRequest();
          }
          Request.MergeFrom(other.Request);
          break;
        case BodyOneofCase.Response:
          if (Response == null) {
            Response = new global::HWL.IMCore.Protocol.ImMessageResponse();
          }
          Response.MergeFrom(other.Response);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::HWL.IMCore.Protocol.ImMessageType) input.ReadEnum();
            break;
          }
          case 18: {
            global::HWL.IMCore.Protocol.ImMessageRequest subBuilder = new global::HWL.IMCore.Protocol.ImMessageRequest();
            if (bodyCase_ == BodyOneofCase.Request) {
              subBuilder.MergeFrom(Request);
            }
            input.ReadMessage(subBuilder);
            Request = subBuilder;
            break;
          }
          case 26: {
            global::HWL.IMCore.Protocol.ImMessageResponse subBuilder = new global::HWL.IMCore.Protocol.ImMessageResponse();
            if (bodyCase_ == BodyOneofCase.Response) {
              subBuilder.MergeFrom(Response);
            }
            input.ReadMessage(subBuilder);
            Response = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///request package
  /// </summary>
  public sealed partial class ImMessageRequest : pb::IMessage<ImMessageRequest> {
    private static readonly pb::MessageParser<ImMessageRequest> _parser = new pb::MessageParser<ImMessageRequest>(() => new ImMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageRequest(ImMessageRequest other) : this() {
      requestHead_ = other.requestHead_ != null ? other.requestHead_.Clone() : null;
      switch (other.RequestBodyCase) {
        case RequestBodyOneofCase.UserValidateRequest:
          UserValidateRequest = other.UserValidateRequest.Clone();
          break;
        case RequestBodyOneofCase.ChatUserMessageRequest:
          ChatUserMessageRequest = other.ChatUserMessageRequest.Clone();
          break;
        case RequestBodyOneofCase.ChatGroupMessageRequest:
          ChatGroupMessageRequest = other.ChatGroupMessageRequest.Clone();
          break;
        case RequestBodyOneofCase.HeartBeatMessageRequest:
          HeartBeatMessageRequest = other.HeartBeatMessageRequest.Clone();
          break;
        case RequestBodyOneofCase.AddFriendMessageRequest:
          AddFriendMessageRequest = other.AddFriendMessageRequest.Clone();
          break;
        case RequestBodyOneofCase.TestConnectionMessageRequest:
          TestConnectionMessageRequest = other.TestConnectionMessageRequest.Clone();
          break;
        case RequestBodyOneofCase.AckMessageRequest:
          AckMessageRequest = other.AckMessageRequest.Clone();
          break;
        case RequestBodyOneofCase.ChatSettingMessageRequest:
          ChatSettingMessageRequest = other.ChatSettingMessageRequest.Clone();
          break;
        case RequestBodyOneofCase.GroupOperateMessageRequest:
          GroupOperateMessageRequest = other.GroupOperateMessageRequest.Clone();
          break;
        case RequestBodyOneofCase.NearCircleOperateMessageRequest:
          NearCircleOperateMessageRequest = other.NearCircleOperateMessageRequest.Clone();
          break;
        case RequestBodyOneofCase.CircleOperateMessageRequest:
          CircleOperateMessageRequest = other.CircleOperateMessageRequest.Clone();
          break;
        case RequestBodyOneofCase.SystemMessageRequest:
          SystemMessageRequest = other.SystemMessageRequest.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageRequest Clone() {
      return new ImMessageRequest(this);
    }

    /// <summary>Field number for the "requestHead" field.</summary>
    public const int RequestHeadFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImMessageRequestHead requestHead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImMessageRequestHead RequestHead {
      get { return requestHead_; }
      set {
        requestHead_ = value;
      }
    }

    /// <summary>Field number for the "userValidateRequest" field.</summary>
    public const int UserValidateRequestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImUserValidateRequest UserValidateRequest {
      get { return requestBodyCase_ == RequestBodyOneofCase.UserValidateRequest ? (global::HWL.IMCore.Protocol.ImUserValidateRequest) requestBody_ : null; }
      set {
        requestBody_ = value;
        requestBodyCase_ = value == null ? RequestBodyOneofCase.None : RequestBodyOneofCase.UserValidateRequest;
      }
    }

    /// <summary>Field number for the "chatUserMessageRequest" field.</summary>
    public const int ChatUserMessageRequestFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatUserMessageRequest ChatUserMessageRequest {
      get { return requestBodyCase_ == RequestBodyOneofCase.ChatUserMessageRequest ? (global::HWL.IMCore.Protocol.ImChatUserMessageRequest) requestBody_ : null; }
      set {
        requestBody_ = value;
        requestBodyCase_ = value == null ? RequestBodyOneofCase.None : RequestBodyOneofCase.ChatUserMessageRequest;
      }
    }

    /// <summary>Field number for the "chatGroupMessageRequest" field.</summary>
    public const int ChatGroupMessageRequestFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatGroupMessageRequest ChatGroupMessageRequest {
      get { return requestBodyCase_ == RequestBodyOneofCase.ChatGroupMessageRequest ? (global::HWL.IMCore.Protocol.ImChatGroupMessageRequest) requestBody_ : null; }
      set {
        requestBody_ = value;
        requestBodyCase_ = value == null ? RequestBodyOneofCase.None : RequestBodyOneofCase.ChatGroupMessageRequest;
      }
    }

    /// <summary>Field number for the "heartBeatMessageRequest" field.</summary>
    public const int HeartBeatMessageRequestFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImHeartBeatMessageRequest HeartBeatMessageRequest {
      get { return requestBodyCase_ == RequestBodyOneofCase.HeartBeatMessageRequest ? (global::HWL.IMCore.Protocol.ImHeartBeatMessageRequest) requestBody_ : null; }
      set {
        requestBody_ = value;
        requestBodyCase_ = value == null ? RequestBodyOneofCase.None : RequestBodyOneofCase.HeartBeatMessageRequest;
      }
    }

    /// <summary>Field number for the "addFriendMessageRequest" field.</summary>
    public const int AddFriendMessageRequestFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImAddFriendMessageRequest AddFriendMessageRequest {
      get { return requestBodyCase_ == RequestBodyOneofCase.AddFriendMessageRequest ? (global::HWL.IMCore.Protocol.ImAddFriendMessageRequest) requestBody_ : null; }
      set {
        requestBody_ = value;
        requestBodyCase_ = value == null ? RequestBodyOneofCase.None : RequestBodyOneofCase.AddFriendMessageRequest;
      }
    }

    /// <summary>Field number for the "testConnectionMessageRequest" field.</summary>
    public const int TestConnectionMessageRequestFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImTestConnectionMessageRequest TestConnectionMessageRequest {
      get { return requestBodyCase_ == RequestBodyOneofCase.TestConnectionMessageRequest ? (global::HWL.IMCore.Protocol.ImTestConnectionMessageRequest) requestBody_ : null; }
      set {
        requestBody_ = value;
        requestBodyCase_ = value == null ? RequestBodyOneofCase.None : RequestBodyOneofCase.TestConnectionMessageRequest;
      }
    }

    /// <summary>Field number for the "ackMessageRequest" field.</summary>
    public const int AckMessageRequestFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImAckMessageRequest AckMessageRequest {
      get { return requestBodyCase_ == RequestBodyOneofCase.AckMessageRequest ? (global::HWL.IMCore.Protocol.ImAckMessageRequest) requestBody_ : null; }
      set {
        requestBody_ = value;
        requestBodyCase_ = value == null ? RequestBodyOneofCase.None : RequestBodyOneofCase.AckMessageRequest;
      }
    }

    /// <summary>Field number for the "chatSettingMessageRequest" field.</summary>
    public const int ChatSettingMessageRequestFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatSettingMessageRequest ChatSettingMessageRequest {
      get { return requestBodyCase_ == RequestBodyOneofCase.ChatSettingMessageRequest ? (global::HWL.IMCore.Protocol.ImChatSettingMessageRequest) requestBody_ : null; }
      set {
        requestBody_ = value;
        requestBodyCase_ = value == null ? RequestBodyOneofCase.None : RequestBodyOneofCase.ChatSettingMessageRequest;
      }
    }

    /// <summary>Field number for the "groupOperateMessageRequest" field.</summary>
    public const int GroupOperateMessageRequestFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImGroupOperateMessageRequest GroupOperateMessageRequest {
      get { return requestBodyCase_ == RequestBodyOneofCase.GroupOperateMessageRequest ? (global::HWL.IMCore.Protocol.ImGroupOperateMessageRequest) requestBody_ : null; }
      set {
        requestBody_ = value;
        requestBodyCase_ = value == null ? RequestBodyOneofCase.None : RequestBodyOneofCase.GroupOperateMessageRequest;
      }
    }

    /// <summary>Field number for the "nearCircleOperateMessageRequest" field.</summary>
    public const int NearCircleOperateMessageRequestFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImNearCircleOperateMessageRequest NearCircleOperateMessageRequest {
      get { return requestBodyCase_ == RequestBodyOneofCase.NearCircleOperateMessageRequest ? (global::HWL.IMCore.Protocol.ImNearCircleOperateMessageRequest) requestBody_ : null; }
      set {
        requestBody_ = value;
        requestBodyCase_ = value == null ? RequestBodyOneofCase.None : RequestBodyOneofCase.NearCircleOperateMessageRequest;
      }
    }

    /// <summary>Field number for the "circleOperateMessageRequest" field.</summary>
    public const int CircleOperateMessageRequestFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImCircleOperateMessageRequest CircleOperateMessageRequest {
      get { return requestBodyCase_ == RequestBodyOneofCase.CircleOperateMessageRequest ? (global::HWL.IMCore.Protocol.ImCircleOperateMessageRequest) requestBody_ : null; }
      set {
        requestBody_ = value;
        requestBodyCase_ = value == null ? RequestBodyOneofCase.None : RequestBodyOneofCase.CircleOperateMessageRequest;
      }
    }

    /// <summary>Field number for the "systemMessageRequest" field.</summary>
    public const int SystemMessageRequestFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImSystemMessageRequest SystemMessageRequest {
      get { return requestBodyCase_ == RequestBodyOneofCase.SystemMessageRequest ? (global::HWL.IMCore.Protocol.ImSystemMessageRequest) requestBody_ : null; }
      set {
        requestBody_ = value;
        requestBodyCase_ = value == null ? RequestBodyOneofCase.None : RequestBodyOneofCase.SystemMessageRequest;
      }
    }

    private object requestBody_;
    /// <summary>Enum of possible cases for the "requestBody" oneof.</summary>
    public enum RequestBodyOneofCase {
      None = 0,
      UserValidateRequest = 2,
      ChatUserMessageRequest = 3,
      ChatGroupMessageRequest = 4,
      HeartBeatMessageRequest = 5,
      AddFriendMessageRequest = 6,
      TestConnectionMessageRequest = 7,
      AckMessageRequest = 8,
      ChatSettingMessageRequest = 9,
      GroupOperateMessageRequest = 10,
      NearCircleOperateMessageRequest = 11,
      CircleOperateMessageRequest = 12,
      SystemMessageRequest = 13,
    }
    private RequestBodyOneofCase requestBodyCase_ = RequestBodyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBodyOneofCase RequestBodyCase {
      get { return requestBodyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestBody() {
      requestBodyCase_ = RequestBodyOneofCase.None;
      requestBody_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHead, other.RequestHead)) return false;
      if (!object.Equals(UserValidateRequest, other.UserValidateRequest)) return false;
      if (!object.Equals(ChatUserMessageRequest, other.ChatUserMessageRequest)) return false;
      if (!object.Equals(ChatGroupMessageRequest, other.ChatGroupMessageRequest)) return false;
      if (!object.Equals(HeartBeatMessageRequest, other.HeartBeatMessageRequest)) return false;
      if (!object.Equals(AddFriendMessageRequest, other.AddFriendMessageRequest)) return false;
      if (!object.Equals(TestConnectionMessageRequest, other.TestConnectionMessageRequest)) return false;
      if (!object.Equals(AckMessageRequest, other.AckMessageRequest)) return false;
      if (!object.Equals(ChatSettingMessageRequest, other.ChatSettingMessageRequest)) return false;
      if (!object.Equals(GroupOperateMessageRequest, other.GroupOperateMessageRequest)) return false;
      if (!object.Equals(NearCircleOperateMessageRequest, other.NearCircleOperateMessageRequest)) return false;
      if (!object.Equals(CircleOperateMessageRequest, other.CircleOperateMessageRequest)) return false;
      if (!object.Equals(SystemMessageRequest, other.SystemMessageRequest)) return false;
      if (RequestBodyCase != other.RequestBodyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestHead_ != null) hash ^= RequestHead.GetHashCode();
      if (requestBodyCase_ == RequestBodyOneofCase.UserValidateRequest) hash ^= UserValidateRequest.GetHashCode();
      if (requestBodyCase_ == RequestBodyOneofCase.ChatUserMessageRequest) hash ^= ChatUserMessageRequest.GetHashCode();
      if (requestBodyCase_ == RequestBodyOneofCase.ChatGroupMessageRequest) hash ^= ChatGroupMessageRequest.GetHashCode();
      if (requestBodyCase_ == RequestBodyOneofCase.HeartBeatMessageRequest) hash ^= HeartBeatMessageRequest.GetHashCode();
      if (requestBodyCase_ == RequestBodyOneofCase.AddFriendMessageRequest) hash ^= AddFriendMessageRequest.GetHashCode();
      if (requestBodyCase_ == RequestBodyOneofCase.TestConnectionMessageRequest) hash ^= TestConnectionMessageRequest.GetHashCode();
      if (requestBodyCase_ == RequestBodyOneofCase.AckMessageRequest) hash ^= AckMessageRequest.GetHashCode();
      if (requestBodyCase_ == RequestBodyOneofCase.ChatSettingMessageRequest) hash ^= ChatSettingMessageRequest.GetHashCode();
      if (requestBodyCase_ == RequestBodyOneofCase.GroupOperateMessageRequest) hash ^= GroupOperateMessageRequest.GetHashCode();
      if (requestBodyCase_ == RequestBodyOneofCase.NearCircleOperateMessageRequest) hash ^= NearCircleOperateMessageRequest.GetHashCode();
      if (requestBodyCase_ == RequestBodyOneofCase.CircleOperateMessageRequest) hash ^= CircleOperateMessageRequest.GetHashCode();
      if (requestBodyCase_ == RequestBodyOneofCase.SystemMessageRequest) hash ^= SystemMessageRequest.GetHashCode();
      hash ^= (int) requestBodyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHead_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHead);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.UserValidateRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(UserValidateRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.ChatUserMessageRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(ChatUserMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.ChatGroupMessageRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(ChatGroupMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.HeartBeatMessageRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(HeartBeatMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.AddFriendMessageRequest) {
        output.WriteRawTag(50);
        output.WriteMessage(AddFriendMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.TestConnectionMessageRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(TestConnectionMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.AckMessageRequest) {
        output.WriteRawTag(66);
        output.WriteMessage(AckMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.ChatSettingMessageRequest) {
        output.WriteRawTag(74);
        output.WriteMessage(ChatSettingMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.GroupOperateMessageRequest) {
        output.WriteRawTag(82);
        output.WriteMessage(GroupOperateMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.NearCircleOperateMessageRequest) {
        output.WriteRawTag(90);
        output.WriteMessage(NearCircleOperateMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.CircleOperateMessageRequest) {
        output.WriteRawTag(98);
        output.WriteMessage(CircleOperateMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.SystemMessageRequest) {
        output.WriteRawTag(106);
        output.WriteMessage(SystemMessageRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestHead_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHead);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.UserValidateRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserValidateRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.ChatUserMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatUserMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.ChatGroupMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatGroupMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.HeartBeatMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeartBeatMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.AddFriendMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddFriendMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.TestConnectionMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TestConnectionMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.AckMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AckMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.ChatSettingMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatSettingMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.GroupOperateMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupOperateMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.NearCircleOperateMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NearCircleOperateMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.CircleOperateMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CircleOperateMessageRequest);
      }
      if (requestBodyCase_ == RequestBodyOneofCase.SystemMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemMessageRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.requestHead_ != null) {
        if (requestHead_ == null) {
          requestHead_ = new global::HWL.IMCore.Protocol.ImMessageRequestHead();
        }
        RequestHead.MergeFrom(other.RequestHead);
      }
      switch (other.RequestBodyCase) {
        case RequestBodyOneofCase.UserValidateRequest:
          if (UserValidateRequest == null) {
            UserValidateRequest = new global::HWL.IMCore.Protocol.ImUserValidateRequest();
          }
          UserValidateRequest.MergeFrom(other.UserValidateRequest);
          break;
        case RequestBodyOneofCase.ChatUserMessageRequest:
          if (ChatUserMessageRequest == null) {
            ChatUserMessageRequest = new global::HWL.IMCore.Protocol.ImChatUserMessageRequest();
          }
          ChatUserMessageRequest.MergeFrom(other.ChatUserMessageRequest);
          break;
        case RequestBodyOneofCase.ChatGroupMessageRequest:
          if (ChatGroupMessageRequest == null) {
            ChatGroupMessageRequest = new global::HWL.IMCore.Protocol.ImChatGroupMessageRequest();
          }
          ChatGroupMessageRequest.MergeFrom(other.ChatGroupMessageRequest);
          break;
        case RequestBodyOneofCase.HeartBeatMessageRequest:
          if (HeartBeatMessageRequest == null) {
            HeartBeatMessageRequest = new global::HWL.IMCore.Protocol.ImHeartBeatMessageRequest();
          }
          HeartBeatMessageRequest.MergeFrom(other.HeartBeatMessageRequest);
          break;
        case RequestBodyOneofCase.AddFriendMessageRequest:
          if (AddFriendMessageRequest == null) {
            AddFriendMessageRequest = new global::HWL.IMCore.Protocol.ImAddFriendMessageRequest();
          }
          AddFriendMessageRequest.MergeFrom(other.AddFriendMessageRequest);
          break;
        case RequestBodyOneofCase.TestConnectionMessageRequest:
          if (TestConnectionMessageRequest == null) {
            TestConnectionMessageRequest = new global::HWL.IMCore.Protocol.ImTestConnectionMessageRequest();
          }
          TestConnectionMessageRequest.MergeFrom(other.TestConnectionMessageRequest);
          break;
        case RequestBodyOneofCase.AckMessageRequest:
          if (AckMessageRequest == null) {
            AckMessageRequest = new global::HWL.IMCore.Protocol.ImAckMessageRequest();
          }
          AckMessageRequest.MergeFrom(other.AckMessageRequest);
          break;
        case RequestBodyOneofCase.ChatSettingMessageRequest:
          if (ChatSettingMessageRequest == null) {
            ChatSettingMessageRequest = new global::HWL.IMCore.Protocol.ImChatSettingMessageRequest();
          }
          ChatSettingMessageRequest.MergeFrom(other.ChatSettingMessageRequest);
          break;
        case RequestBodyOneofCase.GroupOperateMessageRequest:
          if (GroupOperateMessageRequest == null) {
            GroupOperateMessageRequest = new global::HWL.IMCore.Protocol.ImGroupOperateMessageRequest();
          }
          GroupOperateMessageRequest.MergeFrom(other.GroupOperateMessageRequest);
          break;
        case RequestBodyOneofCase.NearCircleOperateMessageRequest:
          if (NearCircleOperateMessageRequest == null) {
            NearCircleOperateMessageRequest = new global::HWL.IMCore.Protocol.ImNearCircleOperateMessageRequest();
          }
          NearCircleOperateMessageRequest.MergeFrom(other.NearCircleOperateMessageRequest);
          break;
        case RequestBodyOneofCase.CircleOperateMessageRequest:
          if (CircleOperateMessageRequest == null) {
            CircleOperateMessageRequest = new global::HWL.IMCore.Protocol.ImCircleOperateMessageRequest();
          }
          CircleOperateMessageRequest.MergeFrom(other.CircleOperateMessageRequest);
          break;
        case RequestBodyOneofCase.SystemMessageRequest:
          if (SystemMessageRequest == null) {
            SystemMessageRequest = new global::HWL.IMCore.Protocol.ImSystemMessageRequest();
          }
          SystemMessageRequest.MergeFrom(other.SystemMessageRequest);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (requestHead_ == null) {
              requestHead_ = new global::HWL.IMCore.Protocol.ImMessageRequestHead();
            }
            input.ReadMessage(requestHead_);
            break;
          }
          case 18: {
            global::HWL.IMCore.Protocol.ImUserValidateRequest subBuilder = new global::HWL.IMCore.Protocol.ImUserValidateRequest();
            if (requestBodyCase_ == RequestBodyOneofCase.UserValidateRequest) {
              subBuilder.MergeFrom(UserValidateRequest);
            }
            input.ReadMessage(subBuilder);
            UserValidateRequest = subBuilder;
            break;
          }
          case 26: {
            global::HWL.IMCore.Protocol.ImChatUserMessageRequest subBuilder = new global::HWL.IMCore.Protocol.ImChatUserMessageRequest();
            if (requestBodyCase_ == RequestBodyOneofCase.ChatUserMessageRequest) {
              subBuilder.MergeFrom(ChatUserMessageRequest);
            }
            input.ReadMessage(subBuilder);
            ChatUserMessageRequest = subBuilder;
            break;
          }
          case 34: {
            global::HWL.IMCore.Protocol.ImChatGroupMessageRequest subBuilder = new global::HWL.IMCore.Protocol.ImChatGroupMessageRequest();
            if (requestBodyCase_ == RequestBodyOneofCase.ChatGroupMessageRequest) {
              subBuilder.MergeFrom(ChatGroupMessageRequest);
            }
            input.ReadMessage(subBuilder);
            ChatGroupMessageRequest = subBuilder;
            break;
          }
          case 42: {
            global::HWL.IMCore.Protocol.ImHeartBeatMessageRequest subBuilder = new global::HWL.IMCore.Protocol.ImHeartBeatMessageRequest();
            if (requestBodyCase_ == RequestBodyOneofCase.HeartBeatMessageRequest) {
              subBuilder.MergeFrom(HeartBeatMessageRequest);
            }
            input.ReadMessage(subBuilder);
            HeartBeatMessageRequest = subBuilder;
            break;
          }
          case 50: {
            global::HWL.IMCore.Protocol.ImAddFriendMessageRequest subBuilder = new global::HWL.IMCore.Protocol.ImAddFriendMessageRequest();
            if (requestBodyCase_ == RequestBodyOneofCase.AddFriendMessageRequest) {
              subBuilder.MergeFrom(AddFriendMessageRequest);
            }
            input.ReadMessage(subBuilder);
            AddFriendMessageRequest = subBuilder;
            break;
          }
          case 58: {
            global::HWL.IMCore.Protocol.ImTestConnectionMessageRequest subBuilder = new global::HWL.IMCore.Protocol.ImTestConnectionMessageRequest();
            if (requestBodyCase_ == RequestBodyOneofCase.TestConnectionMessageRequest) {
              subBuilder.MergeFrom(TestConnectionMessageRequest);
            }
            input.ReadMessage(subBuilder);
            TestConnectionMessageRequest = subBuilder;
            break;
          }
          case 66: {
            global::HWL.IMCore.Protocol.ImAckMessageRequest subBuilder = new global::HWL.IMCore.Protocol.ImAckMessageRequest();
            if (requestBodyCase_ == RequestBodyOneofCase.AckMessageRequest) {
              subBuilder.MergeFrom(AckMessageRequest);
            }
            input.ReadMessage(subBuilder);
            AckMessageRequest = subBuilder;
            break;
          }
          case 74: {
            global::HWL.IMCore.Protocol.ImChatSettingMessageRequest subBuilder = new global::HWL.IMCore.Protocol.ImChatSettingMessageRequest();
            if (requestBodyCase_ == RequestBodyOneofCase.ChatSettingMessageRequest) {
              subBuilder.MergeFrom(ChatSettingMessageRequest);
            }
            input.ReadMessage(subBuilder);
            ChatSettingMessageRequest = subBuilder;
            break;
          }
          case 82: {
            global::HWL.IMCore.Protocol.ImGroupOperateMessageRequest subBuilder = new global::HWL.IMCore.Protocol.ImGroupOperateMessageRequest();
            if (requestBodyCase_ == RequestBodyOneofCase.GroupOperateMessageRequest) {
              subBuilder.MergeFrom(GroupOperateMessageRequest);
            }
            input.ReadMessage(subBuilder);
            GroupOperateMessageRequest = subBuilder;
            break;
          }
          case 90: {
            global::HWL.IMCore.Protocol.ImNearCircleOperateMessageRequest subBuilder = new global::HWL.IMCore.Protocol.ImNearCircleOperateMessageRequest();
            if (requestBodyCase_ == RequestBodyOneofCase.NearCircleOperateMessageRequest) {
              subBuilder.MergeFrom(NearCircleOperateMessageRequest);
            }
            input.ReadMessage(subBuilder);
            NearCircleOperateMessageRequest = subBuilder;
            break;
          }
          case 98: {
            global::HWL.IMCore.Protocol.ImCircleOperateMessageRequest subBuilder = new global::HWL.IMCore.Protocol.ImCircleOperateMessageRequest();
            if (requestBodyCase_ == RequestBodyOneofCase.CircleOperateMessageRequest) {
              subBuilder.MergeFrom(CircleOperateMessageRequest);
            }
            input.ReadMessage(subBuilder);
            CircleOperateMessageRequest = subBuilder;
            break;
          }
          case 106: {
            global::HWL.IMCore.Protocol.ImSystemMessageRequest subBuilder = new global::HWL.IMCore.Protocol.ImSystemMessageRequest();
            if (requestBodyCase_ == RequestBodyOneofCase.SystemMessageRequest) {
              subBuilder.MergeFrom(SystemMessageRequest);
            }
            input.ReadMessage(subBuilder);
            SystemMessageRequest = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImMessageRequestHead : pb::IMessage<ImMessageRequestHead> {
    private static readonly pb::MessageParser<ImMessageRequestHead> _parser = new pb::MessageParser<ImMessageRequestHead>(() => new ImMessageRequestHead());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImMessageRequestHead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageRequestHead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageRequestHead(ImMessageRequestHead other) : this() {
      timestamp_ = other.timestamp_;
      client_ = other.client_;
      sessionid_ = other.sessionid_;
      language_ = other.language_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageRequestHead Clone() {
      return new ImMessageRequestHead(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 2;
    private string client_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Client {
      get { return client_; }
      set {
        client_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sessionid" field.</summary>
    public const int SessionidFieldNumber = 3;
    private string sessionid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sessionid {
      get { return sessionid_; }
      set {
        sessionid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 4;
    private string language_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 5;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImMessageRequestHead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImMessageRequestHead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (Client != other.Client) return false;
      if (Sessionid != other.Sessionid) return false;
      if (Language != other.Language) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (Client.Length != 0) hash ^= Client.GetHashCode();
      if (Sessionid.Length != 0) hash ^= Sessionid.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Timestamp);
      }
      if (Client.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Client);
      }
      if (Sessionid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Sessionid);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Language);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (Client.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Client);
      }
      if (Sessionid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sessionid);
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImMessageRequestHead other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.Client.Length != 0) {
        Client = other.Client;
      }
      if (other.Sessionid.Length != 0) {
        Sessionid = other.Sessionid;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 18: {
            Client = input.ReadString();
            break;
          }
          case 26: {
            Sessionid = input.ReadString();
            break;
          }
          case 34: {
            Language = input.ReadString();
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///response package
  /// </summary>
  public sealed partial class ImMessageResponse : pb::IMessage<ImMessageResponse> {
    private static readonly pb::MessageParser<ImMessageResponse> _parser = new pb::MessageParser<ImMessageResponse>(() => new ImMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageResponse(ImMessageResponse other) : this() {
      responseHead_ = other.responseHead_ != null ? other.responseHead_.Clone() : null;
      switch (other.ResponseBodyCase) {
        case ResponseBodyOneofCase.UserValidateResponse:
          UserValidateResponse = other.UserValidateResponse.Clone();
          break;
        case ResponseBodyOneofCase.ChatUserMessageResponse:
          ChatUserMessageResponse = other.ChatUserMessageResponse.Clone();
          break;
        case ResponseBodyOneofCase.ChatGroupMessageResponse:
          ChatGroupMessageResponse = other.ChatGroupMessageResponse.Clone();
          break;
        case ResponseBodyOneofCase.AddFriendMessageResponse:
          AddFriendMessageResponse = other.AddFriendMessageResponse.Clone();
          break;
        case ResponseBodyOneofCase.TestConnectionMessageResponse:
          TestConnectionMessageResponse = other.TestConnectionMessageResponse.Clone();
          break;
        case ResponseBodyOneofCase.ChatSettingMessageResponse:
          ChatSettingMessageResponse = other.ChatSettingMessageResponse.Clone();
          break;
        case ResponseBodyOneofCase.GroupOperateMessageResponse:
          GroupOperateMessageResponse = other.GroupOperateMessageResponse.Clone();
          break;
        case ResponseBodyOneofCase.NearCircleOperateMessageResponse:
          NearCircleOperateMessageResponse = other.NearCircleOperateMessageResponse.Clone();
          break;
        case ResponseBodyOneofCase.CircleOperateMessageResponse:
          CircleOperateMessageResponse = other.CircleOperateMessageResponse.Clone();
          break;
        case ResponseBodyOneofCase.SystemMessageResponse:
          SystemMessageResponse = other.SystemMessageResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageResponse Clone() {
      return new ImMessageResponse(this);
    }

    /// <summary>Field number for the "responseHead" field.</summary>
    public const int ResponseHeadFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImMessageResponseHead responseHead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImMessageResponseHead ResponseHead {
      get { return responseHead_; }
      set {
        responseHead_ = value;
      }
    }

    /// <summary>Field number for the "userValidateResponse" field.</summary>
    public const int UserValidateResponseFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImUserValidateResponse UserValidateResponse {
      get { return responseBodyCase_ == ResponseBodyOneofCase.UserValidateResponse ? (global::HWL.IMCore.Protocol.ImUserValidateResponse) responseBody_ : null; }
      set {
        responseBody_ = value;
        responseBodyCase_ = value == null ? ResponseBodyOneofCase.None : ResponseBodyOneofCase.UserValidateResponse;
      }
    }

    /// <summary>Field number for the "chatUserMessageResponse" field.</summary>
    public const int ChatUserMessageResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatUserMessageResponse ChatUserMessageResponse {
      get { return responseBodyCase_ == ResponseBodyOneofCase.ChatUserMessageResponse ? (global::HWL.IMCore.Protocol.ImChatUserMessageResponse) responseBody_ : null; }
      set {
        responseBody_ = value;
        responseBodyCase_ = value == null ? ResponseBodyOneofCase.None : ResponseBodyOneofCase.ChatUserMessageResponse;
      }
    }

    /// <summary>Field number for the "chatGroupMessageResponse" field.</summary>
    public const int ChatGroupMessageResponseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatGroupMessageResponse ChatGroupMessageResponse {
      get { return responseBodyCase_ == ResponseBodyOneofCase.ChatGroupMessageResponse ? (global::HWL.IMCore.Protocol.ImChatGroupMessageResponse) responseBody_ : null; }
      set {
        responseBody_ = value;
        responseBodyCase_ = value == null ? ResponseBodyOneofCase.None : ResponseBodyOneofCase.ChatGroupMessageResponse;
      }
    }

    /// <summary>Field number for the "addFriendMessageResponse" field.</summary>
    public const int AddFriendMessageResponseFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImAddFriendMessageResponse AddFriendMessageResponse {
      get { return responseBodyCase_ == ResponseBodyOneofCase.AddFriendMessageResponse ? (global::HWL.IMCore.Protocol.ImAddFriendMessageResponse) responseBody_ : null; }
      set {
        responseBody_ = value;
        responseBodyCase_ = value == null ? ResponseBodyOneofCase.None : ResponseBodyOneofCase.AddFriendMessageResponse;
      }
    }

    /// <summary>Field number for the "testConnectionMessageResponse" field.</summary>
    public const int TestConnectionMessageResponseFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImTestConnectionMessageResponse TestConnectionMessageResponse {
      get { return responseBodyCase_ == ResponseBodyOneofCase.TestConnectionMessageResponse ? (global::HWL.IMCore.Protocol.ImTestConnectionMessageResponse) responseBody_ : null; }
      set {
        responseBody_ = value;
        responseBodyCase_ = value == null ? ResponseBodyOneofCase.None : ResponseBodyOneofCase.TestConnectionMessageResponse;
      }
    }

    /// <summary>Field number for the "chatSettingMessageResponse" field.</summary>
    public const int ChatSettingMessageResponseFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatSettingMessageResponse ChatSettingMessageResponse {
      get { return responseBodyCase_ == ResponseBodyOneofCase.ChatSettingMessageResponse ? (global::HWL.IMCore.Protocol.ImChatSettingMessageResponse) responseBody_ : null; }
      set {
        responseBody_ = value;
        responseBodyCase_ = value == null ? ResponseBodyOneofCase.None : ResponseBodyOneofCase.ChatSettingMessageResponse;
      }
    }

    /// <summary>Field number for the "groupOperateMessageResponse" field.</summary>
    public const int GroupOperateMessageResponseFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImGroupOperateMessageResponse GroupOperateMessageResponse {
      get { return responseBodyCase_ == ResponseBodyOneofCase.GroupOperateMessageResponse ? (global::HWL.IMCore.Protocol.ImGroupOperateMessageResponse) responseBody_ : null; }
      set {
        responseBody_ = value;
        responseBodyCase_ = value == null ? ResponseBodyOneofCase.None : ResponseBodyOneofCase.GroupOperateMessageResponse;
      }
    }

    /// <summary>Field number for the "nearCircleOperateMessageResponse" field.</summary>
    public const int NearCircleOperateMessageResponseFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImNearCircleOperateMessageResponse NearCircleOperateMessageResponse {
      get { return responseBodyCase_ == ResponseBodyOneofCase.NearCircleOperateMessageResponse ? (global::HWL.IMCore.Protocol.ImNearCircleOperateMessageResponse) responseBody_ : null; }
      set {
        responseBody_ = value;
        responseBodyCase_ = value == null ? ResponseBodyOneofCase.None : ResponseBodyOneofCase.NearCircleOperateMessageResponse;
      }
    }

    /// <summary>Field number for the "circleOperateMessageResponse" field.</summary>
    public const int CircleOperateMessageResponseFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImCircleOperateMessageResponse CircleOperateMessageResponse {
      get { return responseBodyCase_ == ResponseBodyOneofCase.CircleOperateMessageResponse ? (global::HWL.IMCore.Protocol.ImCircleOperateMessageResponse) responseBody_ : null; }
      set {
        responseBody_ = value;
        responseBodyCase_ = value == null ? ResponseBodyOneofCase.None : ResponseBodyOneofCase.CircleOperateMessageResponse;
      }
    }

    /// <summary>Field number for the "systemMessageResponse" field.</summary>
    public const int SystemMessageResponseFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImSystemMessageResponse SystemMessageResponse {
      get { return responseBodyCase_ == ResponseBodyOneofCase.SystemMessageResponse ? (global::HWL.IMCore.Protocol.ImSystemMessageResponse) responseBody_ : null; }
      set {
        responseBody_ = value;
        responseBodyCase_ = value == null ? ResponseBodyOneofCase.None : ResponseBodyOneofCase.SystemMessageResponse;
      }
    }

    private object responseBody_;
    /// <summary>Enum of possible cases for the "responseBody" oneof.</summary>
    public enum ResponseBodyOneofCase {
      None = 0,
      UserValidateResponse = 2,
      ChatUserMessageResponse = 3,
      ChatGroupMessageResponse = 4,
      AddFriendMessageResponse = 5,
      TestConnectionMessageResponse = 6,
      ChatSettingMessageResponse = 7,
      GroupOperateMessageResponse = 8,
      NearCircleOperateMessageResponse = 9,
      CircleOperateMessageResponse = 10,
      SystemMessageResponse = 11,
    }
    private ResponseBodyOneofCase responseBodyCase_ = ResponseBodyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseBodyOneofCase ResponseBodyCase {
      get { return responseBodyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponseBody() {
      responseBodyCase_ = ResponseBodyOneofCase.None;
      responseBody_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseHead, other.ResponseHead)) return false;
      if (!object.Equals(UserValidateResponse, other.UserValidateResponse)) return false;
      if (!object.Equals(ChatUserMessageResponse, other.ChatUserMessageResponse)) return false;
      if (!object.Equals(ChatGroupMessageResponse, other.ChatGroupMessageResponse)) return false;
      if (!object.Equals(AddFriendMessageResponse, other.AddFriendMessageResponse)) return false;
      if (!object.Equals(TestConnectionMessageResponse, other.TestConnectionMessageResponse)) return false;
      if (!object.Equals(ChatSettingMessageResponse, other.ChatSettingMessageResponse)) return false;
      if (!object.Equals(GroupOperateMessageResponse, other.GroupOperateMessageResponse)) return false;
      if (!object.Equals(NearCircleOperateMessageResponse, other.NearCircleOperateMessageResponse)) return false;
      if (!object.Equals(CircleOperateMessageResponse, other.CircleOperateMessageResponse)) return false;
      if (!object.Equals(SystemMessageResponse, other.SystemMessageResponse)) return false;
      if (ResponseBodyCase != other.ResponseBodyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseHead_ != null) hash ^= ResponseHead.GetHashCode();
      if (responseBodyCase_ == ResponseBodyOneofCase.UserValidateResponse) hash ^= UserValidateResponse.GetHashCode();
      if (responseBodyCase_ == ResponseBodyOneofCase.ChatUserMessageResponse) hash ^= ChatUserMessageResponse.GetHashCode();
      if (responseBodyCase_ == ResponseBodyOneofCase.ChatGroupMessageResponse) hash ^= ChatGroupMessageResponse.GetHashCode();
      if (responseBodyCase_ == ResponseBodyOneofCase.AddFriendMessageResponse) hash ^= AddFriendMessageResponse.GetHashCode();
      if (responseBodyCase_ == ResponseBodyOneofCase.TestConnectionMessageResponse) hash ^= TestConnectionMessageResponse.GetHashCode();
      if (responseBodyCase_ == ResponseBodyOneofCase.ChatSettingMessageResponse) hash ^= ChatSettingMessageResponse.GetHashCode();
      if (responseBodyCase_ == ResponseBodyOneofCase.GroupOperateMessageResponse) hash ^= GroupOperateMessageResponse.GetHashCode();
      if (responseBodyCase_ == ResponseBodyOneofCase.NearCircleOperateMessageResponse) hash ^= NearCircleOperateMessageResponse.GetHashCode();
      if (responseBodyCase_ == ResponseBodyOneofCase.CircleOperateMessageResponse) hash ^= CircleOperateMessageResponse.GetHashCode();
      if (responseBodyCase_ == ResponseBodyOneofCase.SystemMessageResponse) hash ^= SystemMessageResponse.GetHashCode();
      hash ^= (int) responseBodyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseHead_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseHead);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.UserValidateResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(UserValidateResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.ChatUserMessageResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(ChatUserMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.ChatGroupMessageResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(ChatGroupMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.AddFriendMessageResponse) {
        output.WriteRawTag(42);
        output.WriteMessage(AddFriendMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.TestConnectionMessageResponse) {
        output.WriteRawTag(50);
        output.WriteMessage(TestConnectionMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.ChatSettingMessageResponse) {
        output.WriteRawTag(58);
        output.WriteMessage(ChatSettingMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.GroupOperateMessageResponse) {
        output.WriteRawTag(66);
        output.WriteMessage(GroupOperateMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.NearCircleOperateMessageResponse) {
        output.WriteRawTag(74);
        output.WriteMessage(NearCircleOperateMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.CircleOperateMessageResponse) {
        output.WriteRawTag(82);
        output.WriteMessage(CircleOperateMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.SystemMessageResponse) {
        output.WriteRawTag(90);
        output.WriteMessage(SystemMessageResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseHead_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHead);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.UserValidateResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserValidateResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.ChatUserMessageResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatUserMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.ChatGroupMessageResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatGroupMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.AddFriendMessageResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddFriendMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.TestConnectionMessageResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TestConnectionMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.ChatSettingMessageResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatSettingMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.GroupOperateMessageResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupOperateMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.NearCircleOperateMessageResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NearCircleOperateMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.CircleOperateMessageResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CircleOperateMessageResponse);
      }
      if (responseBodyCase_ == ResponseBodyOneofCase.SystemMessageResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemMessageResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseHead_ != null) {
        if (responseHead_ == null) {
          responseHead_ = new global::HWL.IMCore.Protocol.ImMessageResponseHead();
        }
        ResponseHead.MergeFrom(other.ResponseHead);
      }
      switch (other.ResponseBodyCase) {
        case ResponseBodyOneofCase.UserValidateResponse:
          if (UserValidateResponse == null) {
            UserValidateResponse = new global::HWL.IMCore.Protocol.ImUserValidateResponse();
          }
          UserValidateResponse.MergeFrom(other.UserValidateResponse);
          break;
        case ResponseBodyOneofCase.ChatUserMessageResponse:
          if (ChatUserMessageResponse == null) {
            ChatUserMessageResponse = new global::HWL.IMCore.Protocol.ImChatUserMessageResponse();
          }
          ChatUserMessageResponse.MergeFrom(other.ChatUserMessageResponse);
          break;
        case ResponseBodyOneofCase.ChatGroupMessageResponse:
          if (ChatGroupMessageResponse == null) {
            ChatGroupMessageResponse = new global::HWL.IMCore.Protocol.ImChatGroupMessageResponse();
          }
          ChatGroupMessageResponse.MergeFrom(other.ChatGroupMessageResponse);
          break;
        case ResponseBodyOneofCase.AddFriendMessageResponse:
          if (AddFriendMessageResponse == null) {
            AddFriendMessageResponse = new global::HWL.IMCore.Protocol.ImAddFriendMessageResponse();
          }
          AddFriendMessageResponse.MergeFrom(other.AddFriendMessageResponse);
          break;
        case ResponseBodyOneofCase.TestConnectionMessageResponse:
          if (TestConnectionMessageResponse == null) {
            TestConnectionMessageResponse = new global::HWL.IMCore.Protocol.ImTestConnectionMessageResponse();
          }
          TestConnectionMessageResponse.MergeFrom(other.TestConnectionMessageResponse);
          break;
        case ResponseBodyOneofCase.ChatSettingMessageResponse:
          if (ChatSettingMessageResponse == null) {
            ChatSettingMessageResponse = new global::HWL.IMCore.Protocol.ImChatSettingMessageResponse();
          }
          ChatSettingMessageResponse.MergeFrom(other.ChatSettingMessageResponse);
          break;
        case ResponseBodyOneofCase.GroupOperateMessageResponse:
          if (GroupOperateMessageResponse == null) {
            GroupOperateMessageResponse = new global::HWL.IMCore.Protocol.ImGroupOperateMessageResponse();
          }
          GroupOperateMessageResponse.MergeFrom(other.GroupOperateMessageResponse);
          break;
        case ResponseBodyOneofCase.NearCircleOperateMessageResponse:
          if (NearCircleOperateMessageResponse == null) {
            NearCircleOperateMessageResponse = new global::HWL.IMCore.Protocol.ImNearCircleOperateMessageResponse();
          }
          NearCircleOperateMessageResponse.MergeFrom(other.NearCircleOperateMessageResponse);
          break;
        case ResponseBodyOneofCase.CircleOperateMessageResponse:
          if (CircleOperateMessageResponse == null) {
            CircleOperateMessageResponse = new global::HWL.IMCore.Protocol.ImCircleOperateMessageResponse();
          }
          CircleOperateMessageResponse.MergeFrom(other.CircleOperateMessageResponse);
          break;
        case ResponseBodyOneofCase.SystemMessageResponse:
          if (SystemMessageResponse == null) {
            SystemMessageResponse = new global::HWL.IMCore.Protocol.ImSystemMessageResponse();
          }
          SystemMessageResponse.MergeFrom(other.SystemMessageResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (responseHead_ == null) {
              responseHead_ = new global::HWL.IMCore.Protocol.ImMessageResponseHead();
            }
            input.ReadMessage(responseHead_);
            break;
          }
          case 18: {
            global::HWL.IMCore.Protocol.ImUserValidateResponse subBuilder = new global::HWL.IMCore.Protocol.ImUserValidateResponse();
            if (responseBodyCase_ == ResponseBodyOneofCase.UserValidateResponse) {
              subBuilder.MergeFrom(UserValidateResponse);
            }
            input.ReadMessage(subBuilder);
            UserValidateResponse = subBuilder;
            break;
          }
          case 26: {
            global::HWL.IMCore.Protocol.ImChatUserMessageResponse subBuilder = new global::HWL.IMCore.Protocol.ImChatUserMessageResponse();
            if (responseBodyCase_ == ResponseBodyOneofCase.ChatUserMessageResponse) {
              subBuilder.MergeFrom(ChatUserMessageResponse);
            }
            input.ReadMessage(subBuilder);
            ChatUserMessageResponse = subBuilder;
            break;
          }
          case 34: {
            global::HWL.IMCore.Protocol.ImChatGroupMessageResponse subBuilder = new global::HWL.IMCore.Protocol.ImChatGroupMessageResponse();
            if (responseBodyCase_ == ResponseBodyOneofCase.ChatGroupMessageResponse) {
              subBuilder.MergeFrom(ChatGroupMessageResponse);
            }
            input.ReadMessage(subBuilder);
            ChatGroupMessageResponse = subBuilder;
            break;
          }
          case 42: {
            global::HWL.IMCore.Protocol.ImAddFriendMessageResponse subBuilder = new global::HWL.IMCore.Protocol.ImAddFriendMessageResponse();
            if (responseBodyCase_ == ResponseBodyOneofCase.AddFriendMessageResponse) {
              subBuilder.MergeFrom(AddFriendMessageResponse);
            }
            input.ReadMessage(subBuilder);
            AddFriendMessageResponse = subBuilder;
            break;
          }
          case 50: {
            global::HWL.IMCore.Protocol.ImTestConnectionMessageResponse subBuilder = new global::HWL.IMCore.Protocol.ImTestConnectionMessageResponse();
            if (responseBodyCase_ == ResponseBodyOneofCase.TestConnectionMessageResponse) {
              subBuilder.MergeFrom(TestConnectionMessageResponse);
            }
            input.ReadMessage(subBuilder);
            TestConnectionMessageResponse = subBuilder;
            break;
          }
          case 58: {
            global::HWL.IMCore.Protocol.ImChatSettingMessageResponse subBuilder = new global::HWL.IMCore.Protocol.ImChatSettingMessageResponse();
            if (responseBodyCase_ == ResponseBodyOneofCase.ChatSettingMessageResponse) {
              subBuilder.MergeFrom(ChatSettingMessageResponse);
            }
            input.ReadMessage(subBuilder);
            ChatSettingMessageResponse = subBuilder;
            break;
          }
          case 66: {
            global::HWL.IMCore.Protocol.ImGroupOperateMessageResponse subBuilder = new global::HWL.IMCore.Protocol.ImGroupOperateMessageResponse();
            if (responseBodyCase_ == ResponseBodyOneofCase.GroupOperateMessageResponse) {
              subBuilder.MergeFrom(GroupOperateMessageResponse);
            }
            input.ReadMessage(subBuilder);
            GroupOperateMessageResponse = subBuilder;
            break;
          }
          case 74: {
            global::HWL.IMCore.Protocol.ImNearCircleOperateMessageResponse subBuilder = new global::HWL.IMCore.Protocol.ImNearCircleOperateMessageResponse();
            if (responseBodyCase_ == ResponseBodyOneofCase.NearCircleOperateMessageResponse) {
              subBuilder.MergeFrom(NearCircleOperateMessageResponse);
            }
            input.ReadMessage(subBuilder);
            NearCircleOperateMessageResponse = subBuilder;
            break;
          }
          case 82: {
            global::HWL.IMCore.Protocol.ImCircleOperateMessageResponse subBuilder = new global::HWL.IMCore.Protocol.ImCircleOperateMessageResponse();
            if (responseBodyCase_ == ResponseBodyOneofCase.CircleOperateMessageResponse) {
              subBuilder.MergeFrom(CircleOperateMessageResponse);
            }
            input.ReadMessage(subBuilder);
            CircleOperateMessageResponse = subBuilder;
            break;
          }
          case 90: {
            global::HWL.IMCore.Protocol.ImSystemMessageResponse subBuilder = new global::HWL.IMCore.Protocol.ImSystemMessageResponse();
            if (responseBodyCase_ == ResponseBodyOneofCase.SystemMessageResponse) {
              subBuilder.MergeFrom(SystemMessageResponse);
            }
            input.ReadMessage(subBuilder);
            SystemMessageResponse = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImMessageResponseHead : pb::IMessage<ImMessageResponseHead> {
    private static readonly pb::MessageParser<ImMessageResponseHead> _parser = new pb::MessageParser<ImMessageResponseHead>(() => new ImMessageResponseHead());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImMessageResponseHead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageResponseHead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageResponseHead(ImMessageResponseHead other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      isack_ = other.isack_;
      messageid_ = other.messageid_;
      source_ = other.source_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMessageResponseHead Clone() {
      return new ImMessageResponseHead(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private uint code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isack" field.</summary>
    public const int IsackFieldNumber = 3;
    private bool isack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Isack {
      get { return isack_; }
      set {
        isack_ = value;
      }
    }

    /// <summary>Field number for the "messageid" field.</summary>
    public const int MessageidFieldNumber = 4;
    private string messageid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Messageid {
      get { return messageid_; }
      set {
        messageid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 5;
    private global::HWL.IMCore.Protocol.ImMessageSourcePosition source_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImMessageSourcePosition Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImMessageResponseHead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImMessageResponseHead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      if (Isack != other.Isack) return false;
      if (Messageid != other.Messageid) return false;
      if (Source != other.Source) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Isack != false) hash ^= Isack.GetHashCode();
      if (Messageid.Length != 0) hash ^= Messageid.GetHashCode();
      if (Source != 0) hash ^= Source.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (Isack != false) {
        output.WriteRawTag(24);
        output.WriteBool(Isack);
      }
      if (Messageid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Messageid);
      }
      if (Source != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Isack != false) {
        size += 1 + 1;
      }
      if (Messageid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Messageid);
      }
      if (Source != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Source);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImMessageResponseHead other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Isack != false) {
        Isack = other.Isack;
      }
      if (other.Messageid.Length != 0) {
        Messageid = other.Messageid;
      }
      if (other.Source != 0) {
        Source = other.Source;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadUInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            Isack = input.ReadBool();
            break;
          }
          case 34: {
            Messageid = input.ReadString();
            break;
          }
          case 40: {
            source_ = (global::HWL.IMCore.Protocol.ImMessageSourcePosition) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///user validate message
  /// </summary>
  public sealed partial class ImUserValidateRequest : pb::IMessage<ImUserValidateRequest> {
    private static readonly pb::MessageParser<ImUserValidateRequest> _parser = new pb::MessageParser<ImUserValidateRequest>(() => new ImUserValidateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImUserValidateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserValidateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserValidateRequest(ImUserValidateRequest other) : this() {
      userId_ = other.userId_;
      token_ = other.token_;
      messageid_ = other.messageid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserValidateRequest Clone() {
      return new ImUserValidateRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "messageid" field.</summary>
    public const int MessageidFieldNumber = 3;
    private string messageid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Messageid {
      get { return messageid_; }
      set {
        messageid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImUserValidateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImUserValidateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Token != other.Token) return false;
      if (Messageid != other.Messageid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (Messageid.Length != 0) hash ^= Messageid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (Messageid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Messageid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (Messageid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Messageid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImUserValidateRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.Messageid.Length != 0) {
        Messageid = other.Messageid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            Messageid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImUserValidateResponse : pb::IMessage<ImUserValidateResponse> {
    private static readonly pb::MessageParser<ImUserValidateResponse> _parser = new pb::MessageParser<ImUserValidateResponse>(() => new ImUserValidateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImUserValidateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserValidateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserValidateResponse(ImUserValidateResponse other) : this() {
      isSuccess_ = other.isSuccess_;
      message_ = other.message_;
      isOnline_ = other.isOnline_;
      sessionid_ = other.sessionid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserValidateResponse Clone() {
      return new ImUserValidateResponse(this);
    }

    /// <summary>Field number for the "isSuccess" field.</summary>
    public const int IsSuccessFieldNumber = 1;
    private bool isSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuccess {
      get { return isSuccess_; }
      set {
        isSuccess_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isOnline" field.</summary>
    public const int IsOnlineFieldNumber = 3;
    private bool isOnline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOnline {
      get { return isOnline_; }
      set {
        isOnline_ = value;
      }
    }

    /// <summary>Field number for the "sessionid" field.</summary>
    public const int SessionidFieldNumber = 4;
    private string sessionid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sessionid {
      get { return sessionid_; }
      set {
        sessionid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImUserValidateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImUserValidateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSuccess != other.IsSuccess) return false;
      if (Message != other.Message) return false;
      if (IsOnline != other.IsOnline) return false;
      if (Sessionid != other.Sessionid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSuccess != false) hash ^= IsSuccess.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (IsOnline != false) hash ^= IsOnline.GetHashCode();
      if (Sessionid.Length != 0) hash ^= Sessionid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSuccess);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (IsOnline != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOnline);
      }
      if (Sessionid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Sessionid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSuccess != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (IsOnline != false) {
        size += 1 + 1;
      }
      if (Sessionid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sessionid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImUserValidateResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsSuccess != false) {
        IsSuccess = other.IsSuccess;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.IsOnline != false) {
        IsOnline = other.IsOnline;
      }
      if (other.Sessionid.Length != 0) {
        Sessionid = other.Sessionid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSuccess = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            IsOnline = input.ReadBool();
            break;
          }
          case 34: {
            Sessionid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///chat user message
  /// </summary>
  public sealed partial class ImChatUserMessageRequest : pb::IMessage<ImChatUserMessageRequest> {
    private static readonly pb::MessageParser<ImChatUserMessageRequest> _parser = new pb::MessageParser<ImChatUserMessageRequest>(() => new ImChatUserMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImChatUserMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatUserMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatUserMessageRequest(ImChatUserMessageRequest other) : this() {
      chatUserMessageContent_ = other.chatUserMessageContent_ != null ? other.chatUserMessageContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatUserMessageRequest Clone() {
      return new ImChatUserMessageRequest(this);
    }

    /// <summary>Field number for the "chatUserMessageContent" field.</summary>
    public const int ChatUserMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImChatUserMessageContent chatUserMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatUserMessageContent ChatUserMessageContent {
      get { return chatUserMessageContent_; }
      set {
        chatUserMessageContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImChatUserMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImChatUserMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChatUserMessageContent, other.ChatUserMessageContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (chatUserMessageContent_ != null) hash ^= ChatUserMessageContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (chatUserMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChatUserMessageContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (chatUserMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatUserMessageContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImChatUserMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.chatUserMessageContent_ != null) {
        if (chatUserMessageContent_ == null) {
          chatUserMessageContent_ = new global::HWL.IMCore.Protocol.ImChatUserMessageContent();
        }
        ChatUserMessageContent.MergeFrom(other.ChatUserMessageContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chatUserMessageContent_ == null) {
              chatUserMessageContent_ = new global::HWL.IMCore.Protocol.ImChatUserMessageContent();
            }
            input.ReadMessage(chatUserMessageContent_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImChatUserMessageResponse : pb::IMessage<ImChatUserMessageResponse> {
    private static readonly pb::MessageParser<ImChatUserMessageResponse> _parser = new pb::MessageParser<ImChatUserMessageResponse>(() => new ImChatUserMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImChatUserMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatUserMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatUserMessageResponse(ImChatUserMessageResponse other) : this() {
      chatUserMessageContent_ = other.chatUserMessageContent_ != null ? other.chatUserMessageContent_.Clone() : null;
      buildTime_ = other.buildTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatUserMessageResponse Clone() {
      return new ImChatUserMessageResponse(this);
    }

    /// <summary>Field number for the "chatUserMessageContent" field.</summary>
    public const int ChatUserMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImChatUserMessageContent chatUserMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatUserMessageContent ChatUserMessageContent {
      get { return chatUserMessageContent_; }
      set {
        chatUserMessageContent_ = value;
      }
    }

    /// <summary>Field number for the "buildTime" field.</summary>
    public const int BuildTimeFieldNumber = 2;
    private ulong buildTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BuildTime {
      get { return buildTime_; }
      set {
        buildTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImChatUserMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImChatUserMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChatUserMessageContent, other.ChatUserMessageContent)) return false;
      if (BuildTime != other.BuildTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (chatUserMessageContent_ != null) hash ^= ChatUserMessageContent.GetHashCode();
      if (BuildTime != 0UL) hash ^= BuildTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (chatUserMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChatUserMessageContent);
      }
      if (BuildTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BuildTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (chatUserMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatUserMessageContent);
      }
      if (BuildTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BuildTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImChatUserMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.chatUserMessageContent_ != null) {
        if (chatUserMessageContent_ == null) {
          chatUserMessageContent_ = new global::HWL.IMCore.Protocol.ImChatUserMessageContent();
        }
        ChatUserMessageContent.MergeFrom(other.ChatUserMessageContent);
      }
      if (other.BuildTime != 0UL) {
        BuildTime = other.BuildTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chatUserMessageContent_ == null) {
              chatUserMessageContent_ = new global::HWL.IMCore.Protocol.ImChatUserMessageContent();
            }
            input.ReadMessage(chatUserMessageContent_);
            break;
          }
          case 16: {
            BuildTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImChatUserMessageContent : pb::IMessage<ImChatUserMessageContent> {
    private static readonly pb::MessageParser<ImChatUserMessageContent> _parser = new pb::MessageParser<ImChatUserMessageContent>(() => new ImChatUserMessageContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImChatUserMessageContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatUserMessageContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatUserMessageContent(ImChatUserMessageContent other) : this() {
      fromUserId_ = other.fromUserId_;
      fromUserName_ = other.fromUserName_;
      fromUserImage_ = other.fromUserImage_;
      toUserId_ = other.toUserId_;
      contentType_ = other.contentType_;
      content_ = other.content_;
      originalUrl_ = other.originalUrl_;
      previewUrl_ = other.previewUrl_;
      imageWidth_ = other.imageWidth_;
      imageHeight_ = other.imageHeight_;
      size_ = other.size_;
      playTime_ = other.playTime_;
      isFriend_ = other.isFriend_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatUserMessageContent Clone() {
      return new ImChatUserMessageContent(this);
    }

    /// <summary>Field number for the "fromUserId" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "fromUserName" field.</summary>
    public const int FromUserNameFieldNumber = 2;
    private string fromUserName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromUserName {
      get { return fromUserName_; }
      set {
        fromUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fromUserImage" field.</summary>
    public const int FromUserImageFieldNumber = 3;
    private string fromUserImage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromUserImage {
      get { return fromUserImage_; }
      set {
        fromUserImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toUserId" field.</summary>
    public const int ToUserIdFieldNumber = 4;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 5;
    private uint contentType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 6;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "originalUrl" field.</summary>
    public const int OriginalUrlFieldNumber = 7;
    private string originalUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalUrl {
      get { return originalUrl_; }
      set {
        originalUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "previewUrl" field.</summary>
    public const int PreviewUrlFieldNumber = 8;
    private string previewUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreviewUrl {
      get { return previewUrl_; }
      set {
        previewUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "imageWidth" field.</summary>
    public const int ImageWidthFieldNumber = 9;
    private uint imageWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ImageWidth {
      get { return imageWidth_; }
      set {
        imageWidth_ = value;
      }
    }

    /// <summary>Field number for the "imageHeight" field.</summary>
    public const int ImageHeightFieldNumber = 10;
    private uint imageHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ImageHeight {
      get { return imageHeight_; }
      set {
        imageHeight_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 11;
    private uint size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "playTime" field.</summary>
    public const int PlayTimeFieldNumber = 12;
    private uint playTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlayTime {
      get { return playTime_; }
      set {
        playTime_ = value;
      }
    }

    /// <summary>Field number for the "isFriend" field.</summary>
    public const int IsFriendFieldNumber = 13;
    private bool isFriend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFriend {
      get { return isFriend_; }
      set {
        isFriend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImChatUserMessageContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImChatUserMessageContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (FromUserName != other.FromUserName) return false;
      if (FromUserImage != other.FromUserImage) return false;
      if (ToUserId != other.ToUserId) return false;
      if (ContentType != other.ContentType) return false;
      if (Content != other.Content) return false;
      if (OriginalUrl != other.OriginalUrl) return false;
      if (PreviewUrl != other.PreviewUrl) return false;
      if (ImageWidth != other.ImageWidth) return false;
      if (ImageHeight != other.ImageHeight) return false;
      if (Size != other.Size) return false;
      if (PlayTime != other.PlayTime) return false;
      if (IsFriend != other.IsFriend) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (FromUserName.Length != 0) hash ^= FromUserName.GetHashCode();
      if (FromUserImage.Length != 0) hash ^= FromUserImage.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (ContentType != 0) hash ^= ContentType.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (OriginalUrl.Length != 0) hash ^= OriginalUrl.GetHashCode();
      if (PreviewUrl.Length != 0) hash ^= PreviewUrl.GetHashCode();
      if (ImageWidth != 0) hash ^= ImageWidth.GetHashCode();
      if (ImageHeight != 0) hash ^= ImageHeight.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      if (PlayTime != 0) hash ^= PlayTime.GetHashCode();
      if (IsFriend != false) hash ^= IsFriend.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (FromUserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FromUserName);
      }
      if (FromUserImage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FromUserImage);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(ToUserId);
      }
      if (ContentType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ContentType);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Content);
      }
      if (OriginalUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OriginalUrl);
      }
      if (PreviewUrl.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PreviewUrl);
      }
      if (ImageWidth != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ImageWidth);
      }
      if (ImageHeight != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(ImageHeight);
      }
      if (Size != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Size);
      }
      if (PlayTime != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(PlayTime);
      }
      if (IsFriend != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsFriend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (FromUserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUserName);
      }
      if (FromUserImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUserImage);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (ContentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ContentType);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (OriginalUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalUrl);
      }
      if (PreviewUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreviewUrl);
      }
      if (ImageWidth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImageWidth);
      }
      if (ImageHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImageHeight);
      }
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Size);
      }
      if (PlayTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayTime);
      }
      if (IsFriend != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImChatUserMessageContent other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.FromUserName.Length != 0) {
        FromUserName = other.FromUserName;
      }
      if (other.FromUserImage.Length != 0) {
        FromUserImage = other.FromUserImage;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.ContentType != 0) {
        ContentType = other.ContentType;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.OriginalUrl.Length != 0) {
        OriginalUrl = other.OriginalUrl;
      }
      if (other.PreviewUrl.Length != 0) {
        PreviewUrl = other.PreviewUrl;
      }
      if (other.ImageWidth != 0) {
        ImageWidth = other.ImageWidth;
      }
      if (other.ImageHeight != 0) {
        ImageHeight = other.ImageHeight;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      if (other.PlayTime != 0) {
        PlayTime = other.PlayTime;
      }
      if (other.IsFriend != false) {
        IsFriend = other.IsFriend;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 18: {
            FromUserName = input.ReadString();
            break;
          }
          case 26: {
            FromUserImage = input.ReadString();
            break;
          }
          case 32: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 40: {
            ContentType = input.ReadUInt32();
            break;
          }
          case 50: {
            Content = input.ReadString();
            break;
          }
          case 58: {
            OriginalUrl = input.ReadString();
            break;
          }
          case 66: {
            PreviewUrl = input.ReadString();
            break;
          }
          case 72: {
            ImageWidth = input.ReadUInt32();
            break;
          }
          case 80: {
            ImageHeight = input.ReadUInt32();
            break;
          }
          case 88: {
            Size = input.ReadUInt32();
            break;
          }
          case 96: {
            PlayTime = input.ReadUInt32();
            break;
          }
          case 104: {
            IsFriend = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///chat group message
  /// </summary>
  public sealed partial class ImChatGroupMessageRequest : pb::IMessage<ImChatGroupMessageRequest> {
    private static readonly pb::MessageParser<ImChatGroupMessageRequest> _parser = new pb::MessageParser<ImChatGroupMessageRequest>(() => new ImChatGroupMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImChatGroupMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatGroupMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatGroupMessageRequest(ImChatGroupMessageRequest other) : this() {
      chatGroupMessageContent_ = other.chatGroupMessageContent_ != null ? other.chatGroupMessageContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatGroupMessageRequest Clone() {
      return new ImChatGroupMessageRequest(this);
    }

    /// <summary>Field number for the "chatGroupMessageContent" field.</summary>
    public const int ChatGroupMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImChatGroupMessageContent chatGroupMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatGroupMessageContent ChatGroupMessageContent {
      get { return chatGroupMessageContent_; }
      set {
        chatGroupMessageContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImChatGroupMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImChatGroupMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChatGroupMessageContent, other.ChatGroupMessageContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (chatGroupMessageContent_ != null) hash ^= ChatGroupMessageContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (chatGroupMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChatGroupMessageContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (chatGroupMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatGroupMessageContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImChatGroupMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.chatGroupMessageContent_ != null) {
        if (chatGroupMessageContent_ == null) {
          chatGroupMessageContent_ = new global::HWL.IMCore.Protocol.ImChatGroupMessageContent();
        }
        ChatGroupMessageContent.MergeFrom(other.ChatGroupMessageContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chatGroupMessageContent_ == null) {
              chatGroupMessageContent_ = new global::HWL.IMCore.Protocol.ImChatGroupMessageContent();
            }
            input.ReadMessage(chatGroupMessageContent_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImChatGroupMessageResponse : pb::IMessage<ImChatGroupMessageResponse> {
    private static readonly pb::MessageParser<ImChatGroupMessageResponse> _parser = new pb::MessageParser<ImChatGroupMessageResponse>(() => new ImChatGroupMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImChatGroupMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatGroupMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatGroupMessageResponse(ImChatGroupMessageResponse other) : this() {
      chatGroupMessageContent_ = other.chatGroupMessageContent_ != null ? other.chatGroupMessageContent_.Clone() : null;
      buildTime_ = other.buildTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatGroupMessageResponse Clone() {
      return new ImChatGroupMessageResponse(this);
    }

    /// <summary>Field number for the "chatGroupMessageContent" field.</summary>
    public const int ChatGroupMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImChatGroupMessageContent chatGroupMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatGroupMessageContent ChatGroupMessageContent {
      get { return chatGroupMessageContent_; }
      set {
        chatGroupMessageContent_ = value;
      }
    }

    /// <summary>Field number for the "buildTime" field.</summary>
    public const int BuildTimeFieldNumber = 2;
    private ulong buildTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BuildTime {
      get { return buildTime_; }
      set {
        buildTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImChatGroupMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImChatGroupMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChatGroupMessageContent, other.ChatGroupMessageContent)) return false;
      if (BuildTime != other.BuildTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (chatGroupMessageContent_ != null) hash ^= ChatGroupMessageContent.GetHashCode();
      if (BuildTime != 0UL) hash ^= BuildTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (chatGroupMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChatGroupMessageContent);
      }
      if (BuildTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BuildTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (chatGroupMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatGroupMessageContent);
      }
      if (BuildTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BuildTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImChatGroupMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.chatGroupMessageContent_ != null) {
        if (chatGroupMessageContent_ == null) {
          chatGroupMessageContent_ = new global::HWL.IMCore.Protocol.ImChatGroupMessageContent();
        }
        ChatGroupMessageContent.MergeFrom(other.ChatGroupMessageContent);
      }
      if (other.BuildTime != 0UL) {
        BuildTime = other.BuildTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chatGroupMessageContent_ == null) {
              chatGroupMessageContent_ = new global::HWL.IMCore.Protocol.ImChatGroupMessageContent();
            }
            input.ReadMessage(chatGroupMessageContent_);
            break;
          }
          case 16: {
            BuildTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImChatGroupMessageContent : pb::IMessage<ImChatGroupMessageContent> {
    private static readonly pb::MessageParser<ImChatGroupMessageContent> _parser = new pb::MessageParser<ImChatGroupMessageContent>(() => new ImChatGroupMessageContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImChatGroupMessageContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatGroupMessageContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatGroupMessageContent(ImChatGroupMessageContent other) : this() {
      fromUserId_ = other.fromUserId_;
      fromUserName_ = other.fromUserName_;
      fromUserImage_ = other.fromUserImage_;
      toGroupGuid_ = other.toGroupGuid_;
      contentType_ = other.contentType_;
      content_ = other.content_;
      originalUrl_ = other.originalUrl_;
      previewUrl_ = other.previewUrl_;
      imageWidth_ = other.imageWidth_;
      imageHeight_ = other.imageHeight_;
      size_ = other.size_;
      playTime_ = other.playTime_;
      isFriend_ = other.isFriend_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatGroupMessageContent Clone() {
      return new ImChatGroupMessageContent(this);
    }

    /// <summary>Field number for the "fromUserId" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "fromUserName" field.</summary>
    public const int FromUserNameFieldNumber = 2;
    private string fromUserName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromUserName {
      get { return fromUserName_; }
      set {
        fromUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fromUserImage" field.</summary>
    public const int FromUserImageFieldNumber = 3;
    private string fromUserImage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromUserImage {
      get { return fromUserImage_; }
      set {
        fromUserImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toGroupGuid" field.</summary>
    public const int ToGroupGuidFieldNumber = 4;
    private string toGroupGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToGroupGuid {
      get { return toGroupGuid_; }
      set {
        toGroupGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 5;
    private uint contentType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 6;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "originalUrl" field.</summary>
    public const int OriginalUrlFieldNumber = 7;
    private string originalUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalUrl {
      get { return originalUrl_; }
      set {
        originalUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "previewUrl" field.</summary>
    public const int PreviewUrlFieldNumber = 8;
    private string previewUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreviewUrl {
      get { return previewUrl_; }
      set {
        previewUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "imageWidth" field.</summary>
    public const int ImageWidthFieldNumber = 9;
    private uint imageWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ImageWidth {
      get { return imageWidth_; }
      set {
        imageWidth_ = value;
      }
    }

    /// <summary>Field number for the "imageHeight" field.</summary>
    public const int ImageHeightFieldNumber = 10;
    private uint imageHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ImageHeight {
      get { return imageHeight_; }
      set {
        imageHeight_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 11;
    private uint size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "playTime" field.</summary>
    public const int PlayTimeFieldNumber = 12;
    private uint playTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlayTime {
      get { return playTime_; }
      set {
        playTime_ = value;
      }
    }

    /// <summary>Field number for the "isFriend" field.</summary>
    public const int IsFriendFieldNumber = 13;
    private bool isFriend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFriend {
      get { return isFriend_; }
      set {
        isFriend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImChatGroupMessageContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImChatGroupMessageContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (FromUserName != other.FromUserName) return false;
      if (FromUserImage != other.FromUserImage) return false;
      if (ToGroupGuid != other.ToGroupGuid) return false;
      if (ContentType != other.ContentType) return false;
      if (Content != other.Content) return false;
      if (OriginalUrl != other.OriginalUrl) return false;
      if (PreviewUrl != other.PreviewUrl) return false;
      if (ImageWidth != other.ImageWidth) return false;
      if (ImageHeight != other.ImageHeight) return false;
      if (Size != other.Size) return false;
      if (PlayTime != other.PlayTime) return false;
      if (IsFriend != other.IsFriend) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (FromUserName.Length != 0) hash ^= FromUserName.GetHashCode();
      if (FromUserImage.Length != 0) hash ^= FromUserImage.GetHashCode();
      if (ToGroupGuid.Length != 0) hash ^= ToGroupGuid.GetHashCode();
      if (ContentType != 0) hash ^= ContentType.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (OriginalUrl.Length != 0) hash ^= OriginalUrl.GetHashCode();
      if (PreviewUrl.Length != 0) hash ^= PreviewUrl.GetHashCode();
      if (ImageWidth != 0) hash ^= ImageWidth.GetHashCode();
      if (ImageHeight != 0) hash ^= ImageHeight.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      if (PlayTime != 0) hash ^= PlayTime.GetHashCode();
      if (IsFriend != false) hash ^= IsFriend.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (FromUserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FromUserName);
      }
      if (FromUserImage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FromUserImage);
      }
      if (ToGroupGuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ToGroupGuid);
      }
      if (ContentType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ContentType);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Content);
      }
      if (OriginalUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OriginalUrl);
      }
      if (PreviewUrl.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PreviewUrl);
      }
      if (ImageWidth != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ImageWidth);
      }
      if (ImageHeight != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(ImageHeight);
      }
      if (Size != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Size);
      }
      if (PlayTime != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(PlayTime);
      }
      if (IsFriend != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsFriend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (FromUserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUserName);
      }
      if (FromUserImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUserImage);
      }
      if (ToGroupGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToGroupGuid);
      }
      if (ContentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ContentType);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (OriginalUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalUrl);
      }
      if (PreviewUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreviewUrl);
      }
      if (ImageWidth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImageWidth);
      }
      if (ImageHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImageHeight);
      }
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Size);
      }
      if (PlayTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayTime);
      }
      if (IsFriend != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImChatGroupMessageContent other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.FromUserName.Length != 0) {
        FromUserName = other.FromUserName;
      }
      if (other.FromUserImage.Length != 0) {
        FromUserImage = other.FromUserImage;
      }
      if (other.ToGroupGuid.Length != 0) {
        ToGroupGuid = other.ToGroupGuid;
      }
      if (other.ContentType != 0) {
        ContentType = other.ContentType;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.OriginalUrl.Length != 0) {
        OriginalUrl = other.OriginalUrl;
      }
      if (other.PreviewUrl.Length != 0) {
        PreviewUrl = other.PreviewUrl;
      }
      if (other.ImageWidth != 0) {
        ImageWidth = other.ImageWidth;
      }
      if (other.ImageHeight != 0) {
        ImageHeight = other.ImageHeight;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      if (other.PlayTime != 0) {
        PlayTime = other.PlayTime;
      }
      if (other.IsFriend != false) {
        IsFriend = other.IsFriend;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 18: {
            FromUserName = input.ReadString();
            break;
          }
          case 26: {
            FromUserImage = input.ReadString();
            break;
          }
          case 34: {
            ToGroupGuid = input.ReadString();
            break;
          }
          case 40: {
            ContentType = input.ReadUInt32();
            break;
          }
          case 50: {
            Content = input.ReadString();
            break;
          }
          case 58: {
            OriginalUrl = input.ReadString();
            break;
          }
          case 66: {
            PreviewUrl = input.ReadString();
            break;
          }
          case 72: {
            ImageWidth = input.ReadUInt32();
            break;
          }
          case 80: {
            ImageHeight = input.ReadUInt32();
            break;
          }
          case 88: {
            Size = input.ReadUInt32();
            break;
          }
          case 96: {
            PlayTime = input.ReadUInt32();
            break;
          }
          case 104: {
            IsFriend = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///heart beat check
  /// </summary>
  public sealed partial class ImHeartBeatMessageRequest : pb::IMessage<ImHeartBeatMessageRequest> {
    private static readonly pb::MessageParser<ImHeartBeatMessageRequest> _parser = new pb::MessageParser<ImHeartBeatMessageRequest>(() => new ImHeartBeatMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImHeartBeatMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImHeartBeatMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImHeartBeatMessageRequest(ImHeartBeatMessageRequest other) : this() {
      fromUserId_ = other.fromUserId_;
      currentTime_ = other.currentTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImHeartBeatMessageRequest Clone() {
      return new ImHeartBeatMessageRequest(this);
    }

    /// <summary>Field number for the "fromUserId" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "currentTime" field.</summary>
    public const int CurrentTimeFieldNumber = 2;
    private ulong currentTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CurrentTime {
      get { return currentTime_; }
      set {
        currentTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImHeartBeatMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImHeartBeatMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (CurrentTime != other.CurrentTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (CurrentTime != 0UL) hash ^= CurrentTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (CurrentTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(CurrentTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (CurrentTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CurrentTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImHeartBeatMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.CurrentTime != 0UL) {
        CurrentTime = other.CurrentTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            CurrentTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///add friend message
  /// </summary>
  public sealed partial class ImAddFriendMessageRequest : pb::IMessage<ImAddFriendMessageRequest> {
    private static readonly pb::MessageParser<ImAddFriendMessageRequest> _parser = new pb::MessageParser<ImAddFriendMessageRequest>(() => new ImAddFriendMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImAddFriendMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImAddFriendMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImAddFriendMessageRequest(ImAddFriendMessageRequest other) : this() {
      addFriendMessageContent_ = other.addFriendMessageContent_ != null ? other.addFriendMessageContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImAddFriendMessageRequest Clone() {
      return new ImAddFriendMessageRequest(this);
    }

    /// <summary>Field number for the "addFriendMessageContent" field.</summary>
    public const int AddFriendMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImAddFriendMessageContent addFriendMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImAddFriendMessageContent AddFriendMessageContent {
      get { return addFriendMessageContent_; }
      set {
        addFriendMessageContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImAddFriendMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImAddFriendMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AddFriendMessageContent, other.AddFriendMessageContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (addFriendMessageContent_ != null) hash ^= AddFriendMessageContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (addFriendMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AddFriendMessageContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (addFriendMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddFriendMessageContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImAddFriendMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.addFriendMessageContent_ != null) {
        if (addFriendMessageContent_ == null) {
          addFriendMessageContent_ = new global::HWL.IMCore.Protocol.ImAddFriendMessageContent();
        }
        AddFriendMessageContent.MergeFrom(other.AddFriendMessageContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (addFriendMessageContent_ == null) {
              addFriendMessageContent_ = new global::HWL.IMCore.Protocol.ImAddFriendMessageContent();
            }
            input.ReadMessage(addFriendMessageContent_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImAddFriendMessageResponse : pb::IMessage<ImAddFriendMessageResponse> {
    private static readonly pb::MessageParser<ImAddFriendMessageResponse> _parser = new pb::MessageParser<ImAddFriendMessageResponse>(() => new ImAddFriendMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImAddFriendMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImAddFriendMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImAddFriendMessageResponse(ImAddFriendMessageResponse other) : this() {
      addFriendMessageContent_ = other.addFriendMessageContent_ != null ? other.addFriendMessageContent_.Clone() : null;
      buildTime_ = other.buildTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImAddFriendMessageResponse Clone() {
      return new ImAddFriendMessageResponse(this);
    }

    /// <summary>Field number for the "addFriendMessageContent" field.</summary>
    public const int AddFriendMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImAddFriendMessageContent addFriendMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImAddFriendMessageContent AddFriendMessageContent {
      get { return addFriendMessageContent_; }
      set {
        addFriendMessageContent_ = value;
      }
    }

    /// <summary>Field number for the "buildTime" field.</summary>
    public const int BuildTimeFieldNumber = 2;
    private ulong buildTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BuildTime {
      get { return buildTime_; }
      set {
        buildTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImAddFriendMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImAddFriendMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AddFriendMessageContent, other.AddFriendMessageContent)) return false;
      if (BuildTime != other.BuildTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (addFriendMessageContent_ != null) hash ^= AddFriendMessageContent.GetHashCode();
      if (BuildTime != 0UL) hash ^= BuildTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (addFriendMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AddFriendMessageContent);
      }
      if (BuildTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BuildTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (addFriendMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddFriendMessageContent);
      }
      if (BuildTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BuildTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImAddFriendMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.addFriendMessageContent_ != null) {
        if (addFriendMessageContent_ == null) {
          addFriendMessageContent_ = new global::HWL.IMCore.Protocol.ImAddFriendMessageContent();
        }
        AddFriendMessageContent.MergeFrom(other.AddFriendMessageContent);
      }
      if (other.BuildTime != 0UL) {
        BuildTime = other.BuildTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (addFriendMessageContent_ == null) {
              addFriendMessageContent_ = new global::HWL.IMCore.Protocol.ImAddFriendMessageContent();
            }
            input.ReadMessage(addFriendMessageContent_);
            break;
          }
          case 16: {
            BuildTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImAddFriendMessageContent : pb::IMessage<ImAddFriendMessageContent> {
    private static readonly pb::MessageParser<ImAddFriendMessageContent> _parser = new pb::MessageParser<ImAddFriendMessageContent>(() => new ImAddFriendMessageContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImAddFriendMessageContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImAddFriendMessageContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImAddFriendMessageContent(ImAddFriendMessageContent other) : this() {
      fromUserId_ = other.fromUserId_;
      fromUserName_ = other.fromUserName_;
      fromUserHeadImage_ = other.fromUserHeadImage_;
      toUserId_ = other.toUserId_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImAddFriendMessageContent Clone() {
      return new ImAddFriendMessageContent(this);
    }

    /// <summary>Field number for the "fromUserId" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "fromUserName" field.</summary>
    public const int FromUserNameFieldNumber = 2;
    private string fromUserName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromUserName {
      get { return fromUserName_; }
      set {
        fromUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fromUserHeadImage" field.</summary>
    public const int FromUserHeadImageFieldNumber = 3;
    private string fromUserHeadImage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromUserHeadImage {
      get { return fromUserHeadImage_; }
      set {
        fromUserHeadImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toUserId" field.</summary>
    public const int ToUserIdFieldNumber = 4;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 6;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImAddFriendMessageContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImAddFriendMessageContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (FromUserName != other.FromUserName) return false;
      if (FromUserHeadImage != other.FromUserHeadImage) return false;
      if (ToUserId != other.ToUserId) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (FromUserName.Length != 0) hash ^= FromUserName.GetHashCode();
      if (FromUserHeadImage.Length != 0) hash ^= FromUserHeadImage.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (FromUserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FromUserName);
      }
      if (FromUserHeadImage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FromUserHeadImage);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(ToUserId);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (FromUserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUserName);
      }
      if (FromUserHeadImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUserHeadImage);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImAddFriendMessageContent other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.FromUserName.Length != 0) {
        FromUserName = other.FromUserName;
      }
      if (other.FromUserHeadImage.Length != 0) {
        FromUserHeadImage = other.FromUserHeadImage;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 18: {
            FromUserName = input.ReadString();
            break;
          }
          case 26: {
            FromUserHeadImage = input.ReadString();
            break;
          }
          case 32: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 50: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///test message
  /// </summary>
  public sealed partial class ImTestConnectionMessageRequest : pb::IMessage<ImTestConnectionMessageRequest> {
    private static readonly pb::MessageParser<ImTestConnectionMessageRequest> _parser = new pb::MessageParser<ImTestConnectionMessageRequest>(() => new ImTestConnectionMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImTestConnectionMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImTestConnectionMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImTestConnectionMessageRequest(ImTestConnectionMessageRequest other) : this() {
      fromUserId_ = other.fromUserId_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImTestConnectionMessageRequest Clone() {
      return new ImTestConnectionMessageRequest(this);
    }

    /// <summary>Field number for the "fromUserId" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImTestConnectionMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImTestConnectionMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImTestConnectionMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImTestConnectionMessageResponse : pb::IMessage<ImTestConnectionMessageResponse> {
    private static readonly pb::MessageParser<ImTestConnectionMessageResponse> _parser = new pb::MessageParser<ImTestConnectionMessageResponse>(() => new ImTestConnectionMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImTestConnectionMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImTestConnectionMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImTestConnectionMessageResponse(ImTestConnectionMessageResponse other) : this() {
      content_ = other.content_;
      sendTime_ = other.sendTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImTestConnectionMessageResponse Clone() {
      return new ImTestConnectionMessageResponse(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sendTime" field.</summary>
    public const int SendTimeFieldNumber = 2;
    private ulong sendTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImTestConnectionMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImTestConnectionMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (SendTime != other.SendTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (SendTime != 0UL) hash ^= SendTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      if (SendTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SendTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (SendTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SendTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImTestConnectionMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.SendTime != 0UL) {
        SendTime = other.SendTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
          case 16: {
            SendTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ack message
  /// </summary>
  public sealed partial class ImAckMessageRequest : pb::IMessage<ImAckMessageRequest> {
    private static readonly pb::MessageParser<ImAckMessageRequest> _parser = new pb::MessageParser<ImAckMessageRequest>(() => new ImAckMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImAckMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImAckMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImAckMessageRequest(ImAckMessageRequest other) : this() {
      fromUserId_ = other.fromUserId_;
      messageid_ = other.messageid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImAckMessageRequest Clone() {
      return new ImAckMessageRequest(this);
    }

    /// <summary>Field number for the "fromUserId" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "messageid" field.</summary>
    public const int MessageidFieldNumber = 2;
    private string messageid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Messageid {
      get { return messageid_; }
      set {
        messageid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImAckMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImAckMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (Messageid != other.Messageid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (Messageid.Length != 0) hash ^= Messageid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (Messageid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Messageid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (Messageid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Messageid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImAckMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.Messageid.Length != 0) {
        Messageid = other.Messageid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 18: {
            Messageid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///chat setting message
  /// </summary>
  public sealed partial class ImChatSettingMessageRequest : pb::IMessage<ImChatSettingMessageRequest> {
    private static readonly pb::MessageParser<ImChatSettingMessageRequest> _parser = new pb::MessageParser<ImChatSettingMessageRequest>(() => new ImChatSettingMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImChatSettingMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatSettingMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatSettingMessageRequest(ImChatSettingMessageRequest other) : this() {
      chatSettingMessageContent_ = other.chatSettingMessageContent_ != null ? other.chatSettingMessageContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatSettingMessageRequest Clone() {
      return new ImChatSettingMessageRequest(this);
    }

    /// <summary>Field number for the "chatSettingMessageContent" field.</summary>
    public const int ChatSettingMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImChatSettingMessageContent chatSettingMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatSettingMessageContent ChatSettingMessageContent {
      get { return chatSettingMessageContent_; }
      set {
        chatSettingMessageContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImChatSettingMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImChatSettingMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChatSettingMessageContent, other.ChatSettingMessageContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (chatSettingMessageContent_ != null) hash ^= ChatSettingMessageContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (chatSettingMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChatSettingMessageContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (chatSettingMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatSettingMessageContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImChatSettingMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.chatSettingMessageContent_ != null) {
        if (chatSettingMessageContent_ == null) {
          chatSettingMessageContent_ = new global::HWL.IMCore.Protocol.ImChatSettingMessageContent();
        }
        ChatSettingMessageContent.MergeFrom(other.ChatSettingMessageContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chatSettingMessageContent_ == null) {
              chatSettingMessageContent_ = new global::HWL.IMCore.Protocol.ImChatSettingMessageContent();
            }
            input.ReadMessage(chatSettingMessageContent_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImChatSettingMessageResponse : pb::IMessage<ImChatSettingMessageResponse> {
    private static readonly pb::MessageParser<ImChatSettingMessageResponse> _parser = new pb::MessageParser<ImChatSettingMessageResponse>(() => new ImChatSettingMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImChatSettingMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatSettingMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatSettingMessageResponse(ImChatSettingMessageResponse other) : this() {
      chatSettingMessageContent_ = other.chatSettingMessageContent_ != null ? other.chatSettingMessageContent_.Clone() : null;
      buildTime_ = other.buildTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatSettingMessageResponse Clone() {
      return new ImChatSettingMessageResponse(this);
    }

    /// <summary>Field number for the "chatSettingMessageContent" field.</summary>
    public const int ChatSettingMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImChatSettingMessageContent chatSettingMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatSettingMessageContent ChatSettingMessageContent {
      get { return chatSettingMessageContent_; }
      set {
        chatSettingMessageContent_ = value;
      }
    }

    /// <summary>Field number for the "buildTime" field.</summary>
    public const int BuildTimeFieldNumber = 2;
    private ulong buildTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BuildTime {
      get { return buildTime_; }
      set {
        buildTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImChatSettingMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImChatSettingMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChatSettingMessageContent, other.ChatSettingMessageContent)) return false;
      if (BuildTime != other.BuildTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (chatSettingMessageContent_ != null) hash ^= ChatSettingMessageContent.GetHashCode();
      if (BuildTime != 0UL) hash ^= BuildTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (chatSettingMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChatSettingMessageContent);
      }
      if (BuildTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BuildTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (chatSettingMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatSettingMessageContent);
      }
      if (BuildTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BuildTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImChatSettingMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.chatSettingMessageContent_ != null) {
        if (chatSettingMessageContent_ == null) {
          chatSettingMessageContent_ = new global::HWL.IMCore.Protocol.ImChatSettingMessageContent();
        }
        ChatSettingMessageContent.MergeFrom(other.ChatSettingMessageContent);
      }
      if (other.BuildTime != 0UL) {
        BuildTime = other.BuildTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chatSettingMessageContent_ == null) {
              chatSettingMessageContent_ = new global::HWL.IMCore.Protocol.ImChatSettingMessageContent();
            }
            input.ReadMessage(chatSettingMessageContent_);
            break;
          }
          case 16: {
            BuildTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImChatSettingMessageContent : pb::IMessage<ImChatSettingMessageContent> {
    private static readonly pb::MessageParser<ImChatSettingMessageContent> _parser = new pb::MessageParser<ImChatSettingMessageContent>(() => new ImChatSettingMessageContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImChatSettingMessageContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatSettingMessageContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatSettingMessageContent(ImChatSettingMessageContent other) : this() {
      settingType_ = other.settingType_;
      settingUser_ = other.settingUser_ != null ? other.settingUser_.Clone() : null;
      groupGuid_ = other.groupGuid_;
      groupNote_ = other.groupNote_;
      groupName_ = other.groupName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImChatSettingMessageContent Clone() {
      return new ImChatSettingMessageContent(this);
    }

    /// <summary>Field number for the "settingType" field.</summary>
    public const int SettingTypeFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImChatSettingType settingType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImChatSettingType SettingType {
      get { return settingType_; }
      set {
        settingType_ = value;
      }
    }

    /// <summary>Field number for the "settingUser" field.</summary>
    public const int SettingUserFieldNumber = 2;
    private global::HWL.IMCore.Protocol.ImUserContent settingUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImUserContent SettingUser {
      get { return settingUser_; }
      set {
        settingUser_ = value;
      }
    }

    /// <summary>Field number for the "groupGuid" field.</summary>
    public const int GroupGuidFieldNumber = 3;
    private string groupGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupGuid {
      get { return groupGuid_; }
      set {
        groupGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupNote" field.</summary>
    public const int GroupNoteFieldNumber = 4;
    private string groupNote_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupNote {
      get { return groupNote_; }
      set {
        groupNote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupName" field.</summary>
    public const int GroupNameFieldNumber = 5;
    private string groupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImChatSettingMessageContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImChatSettingMessageContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SettingType != other.SettingType) return false;
      if (!object.Equals(SettingUser, other.SettingUser)) return false;
      if (GroupGuid != other.GroupGuid) return false;
      if (GroupNote != other.GroupNote) return false;
      if (GroupName != other.GroupName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SettingType != 0) hash ^= SettingType.GetHashCode();
      if (settingUser_ != null) hash ^= SettingUser.GetHashCode();
      if (GroupGuid.Length != 0) hash ^= GroupGuid.GetHashCode();
      if (GroupNote.Length != 0) hash ^= GroupNote.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SettingType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SettingType);
      }
      if (settingUser_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SettingUser);
      }
      if (GroupGuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GroupGuid);
      }
      if (GroupNote.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GroupNote);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GroupName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SettingType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SettingType);
      }
      if (settingUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SettingUser);
      }
      if (GroupGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupGuid);
      }
      if (GroupNote.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupNote);
      }
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImChatSettingMessageContent other) {
      if (other == null) {
        return;
      }
      if (other.SettingType != 0) {
        SettingType = other.SettingType;
      }
      if (other.settingUser_ != null) {
        if (settingUser_ == null) {
          settingUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
        }
        SettingUser.MergeFrom(other.SettingUser);
      }
      if (other.GroupGuid.Length != 0) {
        GroupGuid = other.GroupGuid;
      }
      if (other.GroupNote.Length != 0) {
        GroupNote = other.GroupNote;
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            settingType_ = (global::HWL.IMCore.Protocol.ImChatSettingType) input.ReadEnum();
            break;
          }
          case 18: {
            if (settingUser_ == null) {
              settingUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
            }
            input.ReadMessage(settingUser_);
            break;
          }
          case 26: {
            GroupGuid = input.ReadString();
            break;
          }
          case 34: {
            GroupNote = input.ReadString();
            break;
          }
          case 42: {
            GroupName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///group operate message
  /// </summary>
  public sealed partial class ImGroupOperateMessageRequest : pb::IMessage<ImGroupOperateMessageRequest> {
    private static readonly pb::MessageParser<ImGroupOperateMessageRequest> _parser = new pb::MessageParser<ImGroupOperateMessageRequest>(() => new ImGroupOperateMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImGroupOperateMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImGroupOperateMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImGroupOperateMessageRequest(ImGroupOperateMessageRequest other) : this() {
      groupOperateMessageContent_ = other.groupOperateMessageContent_ != null ? other.groupOperateMessageContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImGroupOperateMessageRequest Clone() {
      return new ImGroupOperateMessageRequest(this);
    }

    /// <summary>Field number for the "groupOperateMessageContent" field.</summary>
    public const int GroupOperateMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImGroupOperateMessageContent groupOperateMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImGroupOperateMessageContent GroupOperateMessageContent {
      get { return groupOperateMessageContent_; }
      set {
        groupOperateMessageContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImGroupOperateMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImGroupOperateMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GroupOperateMessageContent, other.GroupOperateMessageContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (groupOperateMessageContent_ != null) hash ^= GroupOperateMessageContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (groupOperateMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GroupOperateMessageContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (groupOperateMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupOperateMessageContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImGroupOperateMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.groupOperateMessageContent_ != null) {
        if (groupOperateMessageContent_ == null) {
          groupOperateMessageContent_ = new global::HWL.IMCore.Protocol.ImGroupOperateMessageContent();
        }
        GroupOperateMessageContent.MergeFrom(other.GroupOperateMessageContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (groupOperateMessageContent_ == null) {
              groupOperateMessageContent_ = new global::HWL.IMCore.Protocol.ImGroupOperateMessageContent();
            }
            input.ReadMessage(groupOperateMessageContent_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImGroupOperateMessageResponse : pb::IMessage<ImGroupOperateMessageResponse> {
    private static readonly pb::MessageParser<ImGroupOperateMessageResponse> _parser = new pb::MessageParser<ImGroupOperateMessageResponse>(() => new ImGroupOperateMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImGroupOperateMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImGroupOperateMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImGroupOperateMessageResponse(ImGroupOperateMessageResponse other) : this() {
      groupOperateMessageContent_ = other.groupOperateMessageContent_ != null ? other.groupOperateMessageContent_.Clone() : null;
      buildTime_ = other.buildTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImGroupOperateMessageResponse Clone() {
      return new ImGroupOperateMessageResponse(this);
    }

    /// <summary>Field number for the "groupOperateMessageContent" field.</summary>
    public const int GroupOperateMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImGroupOperateMessageContent groupOperateMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImGroupOperateMessageContent GroupOperateMessageContent {
      get { return groupOperateMessageContent_; }
      set {
        groupOperateMessageContent_ = value;
      }
    }

    /// <summary>Field number for the "buildTime" field.</summary>
    public const int BuildTimeFieldNumber = 2;
    private ulong buildTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BuildTime {
      get { return buildTime_; }
      set {
        buildTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImGroupOperateMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImGroupOperateMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GroupOperateMessageContent, other.GroupOperateMessageContent)) return false;
      if (BuildTime != other.BuildTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (groupOperateMessageContent_ != null) hash ^= GroupOperateMessageContent.GetHashCode();
      if (BuildTime != 0UL) hash ^= BuildTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (groupOperateMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GroupOperateMessageContent);
      }
      if (BuildTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BuildTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (groupOperateMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupOperateMessageContent);
      }
      if (BuildTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BuildTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImGroupOperateMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.groupOperateMessageContent_ != null) {
        if (groupOperateMessageContent_ == null) {
          groupOperateMessageContent_ = new global::HWL.IMCore.Protocol.ImGroupOperateMessageContent();
        }
        GroupOperateMessageContent.MergeFrom(other.GroupOperateMessageContent);
      }
      if (other.BuildTime != 0UL) {
        BuildTime = other.BuildTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (groupOperateMessageContent_ == null) {
              groupOperateMessageContent_ = new global::HWL.IMCore.Protocol.ImGroupOperateMessageContent();
            }
            input.ReadMessage(groupOperateMessageContent_);
            break;
          }
          case 16: {
            BuildTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImGroupOperateMessageContent : pb::IMessage<ImGroupOperateMessageContent> {
    private static readonly pb::MessageParser<ImGroupOperateMessageContent> _parser = new pb::MessageParser<ImGroupOperateMessageContent>(() => new ImGroupOperateMessageContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImGroupOperateMessageContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImGroupOperateMessageContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImGroupOperateMessageContent(ImGroupOperateMessageContent other) : this() {
      operateType_ = other.operateType_;
      operateUser_ = other.operateUser_ != null ? other.operateUser_.Clone() : null;
      groupGuid_ = other.groupGuid_;
      groupName_ = other.groupName_;
      groupUsers_ = other.groupUsers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImGroupOperateMessageContent Clone() {
      return new ImGroupOperateMessageContent(this);
    }

    /// <summary>Field number for the "operateType" field.</summary>
    public const int OperateTypeFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImGroupOperateType operateType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImGroupOperateType OperateType {
      get { return operateType_; }
      set {
        operateType_ = value;
      }
    }

    /// <summary>Field number for the "operateUser" field.</summary>
    public const int OperateUserFieldNumber = 2;
    private global::HWL.IMCore.Protocol.ImUserContent operateUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImUserContent OperateUser {
      get { return operateUser_; }
      set {
        operateUser_ = value;
      }
    }

    /// <summary>Field number for the "groupGuid" field.</summary>
    public const int GroupGuidFieldNumber = 3;
    private string groupGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupGuid {
      get { return groupGuid_; }
      set {
        groupGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupName" field.</summary>
    public const int GroupNameFieldNumber = 4;
    private string groupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupUsers" field.</summary>
    public const int GroupUsersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::HWL.IMCore.Protocol.ImUserContent> _repeated_groupUsers_codec
        = pb::FieldCodec.ForMessage(42, global::HWL.IMCore.Protocol.ImUserContent.Parser);
    private readonly pbc::RepeatedField<global::HWL.IMCore.Protocol.ImUserContent> groupUsers_ = new pbc::RepeatedField<global::HWL.IMCore.Protocol.ImUserContent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HWL.IMCore.Protocol.ImUserContent> GroupUsers {
      get { return groupUsers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImGroupOperateMessageContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImGroupOperateMessageContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperateType != other.OperateType) return false;
      if (!object.Equals(OperateUser, other.OperateUser)) return false;
      if (GroupGuid != other.GroupGuid) return false;
      if (GroupName != other.GroupName) return false;
      if(!groupUsers_.Equals(other.groupUsers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OperateType != 0) hash ^= OperateType.GetHashCode();
      if (operateUser_ != null) hash ^= OperateUser.GetHashCode();
      if (GroupGuid.Length != 0) hash ^= GroupGuid.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      hash ^= groupUsers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OperateType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OperateType);
      }
      if (operateUser_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OperateUser);
      }
      if (GroupGuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GroupGuid);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GroupName);
      }
      groupUsers_.WriteTo(output, _repeated_groupUsers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OperateType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperateType);
      }
      if (operateUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperateUser);
      }
      if (GroupGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupGuid);
      }
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      size += groupUsers_.CalculateSize(_repeated_groupUsers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImGroupOperateMessageContent other) {
      if (other == null) {
        return;
      }
      if (other.OperateType != 0) {
        OperateType = other.OperateType;
      }
      if (other.operateUser_ != null) {
        if (operateUser_ == null) {
          operateUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
        }
        OperateUser.MergeFrom(other.OperateUser);
      }
      if (other.GroupGuid.Length != 0) {
        GroupGuid = other.GroupGuid;
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
      groupUsers_.Add(other.groupUsers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            operateType_ = (global::HWL.IMCore.Protocol.ImGroupOperateType) input.ReadEnum();
            break;
          }
          case 18: {
            if (operateUser_ == null) {
              operateUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
            }
            input.ReadMessage(operateUser_);
            break;
          }
          case 26: {
            GroupGuid = input.ReadString();
            break;
          }
          case 34: {
            GroupName = input.ReadString();
            break;
          }
          case 42: {
            groupUsers_.AddEntriesFrom(input, _repeated_groupUsers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImUserContent : pb::IMessage<ImUserContent> {
    private static readonly pb::MessageParser<ImUserContent> _parser = new pb::MessageParser<ImUserContent>(() => new ImUserContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImUserContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserContent(ImUserContent other) : this() {
      userId_ = other.userId_;
      userName_ = other.userName_;
      userImage_ = other.userImage_;
      groupUserRemark_ = other.groupUserRemark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImUserContent Clone() {
      return new ImUserContent(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userImage" field.</summary>
    public const int UserImageFieldNumber = 3;
    private string userImage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserImage {
      get { return userImage_; }
      set {
        userImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupUserRemark" field.</summary>
    public const int GroupUserRemarkFieldNumber = 4;
    private string groupUserRemark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupUserRemark {
      get { return groupUserRemark_; }
      set {
        groupUserRemark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImUserContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImUserContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (UserName != other.UserName) return false;
      if (UserImage != other.UserImage) return false;
      if (GroupUserRemark != other.GroupUserRemark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (UserImage.Length != 0) hash ^= UserImage.GetHashCode();
      if (GroupUserRemark.Length != 0) hash ^= GroupUserRemark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (UserImage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserImage);
      }
      if (GroupUserRemark.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GroupUserRemark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (UserImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserImage);
      }
      if (GroupUserRemark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupUserRemark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImUserContent other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.UserImage.Length != 0) {
        UserImage = other.UserImage;
      }
      if (other.GroupUserRemark.Length != 0) {
        GroupUserRemark = other.GroupUserRemark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            UserImage = input.ReadString();
            break;
          }
          case 34: {
            GroupUserRemark = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImNearCircleOperateMessageRequest : pb::IMessage<ImNearCircleOperateMessageRequest> {
    private static readonly pb::MessageParser<ImNearCircleOperateMessageRequest> _parser = new pb::MessageParser<ImNearCircleOperateMessageRequest>(() => new ImNearCircleOperateMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImNearCircleOperateMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImNearCircleOperateMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImNearCircleOperateMessageRequest(ImNearCircleOperateMessageRequest other) : this() {
      nearCircleOperateMessageContent_ = other.nearCircleOperateMessageContent_ != null ? other.nearCircleOperateMessageContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImNearCircleOperateMessageRequest Clone() {
      return new ImNearCircleOperateMessageRequest(this);
    }

    /// <summary>Field number for the "nearCircleOperateMessageContent" field.</summary>
    public const int NearCircleOperateMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImNearCircleOperateMessageContent nearCircleOperateMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImNearCircleOperateMessageContent NearCircleOperateMessageContent {
      get { return nearCircleOperateMessageContent_; }
      set {
        nearCircleOperateMessageContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImNearCircleOperateMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImNearCircleOperateMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NearCircleOperateMessageContent, other.NearCircleOperateMessageContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (nearCircleOperateMessageContent_ != null) hash ^= NearCircleOperateMessageContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (nearCircleOperateMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NearCircleOperateMessageContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (nearCircleOperateMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NearCircleOperateMessageContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImNearCircleOperateMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.nearCircleOperateMessageContent_ != null) {
        if (nearCircleOperateMessageContent_ == null) {
          nearCircleOperateMessageContent_ = new global::HWL.IMCore.Protocol.ImNearCircleOperateMessageContent();
        }
        NearCircleOperateMessageContent.MergeFrom(other.NearCircleOperateMessageContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nearCircleOperateMessageContent_ == null) {
              nearCircleOperateMessageContent_ = new global::HWL.IMCore.Protocol.ImNearCircleOperateMessageContent();
            }
            input.ReadMessage(nearCircleOperateMessageContent_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImNearCircleOperateMessageResponse : pb::IMessage<ImNearCircleOperateMessageResponse> {
    private static readonly pb::MessageParser<ImNearCircleOperateMessageResponse> _parser = new pb::MessageParser<ImNearCircleOperateMessageResponse>(() => new ImNearCircleOperateMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImNearCircleOperateMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImNearCircleOperateMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImNearCircleOperateMessageResponse(ImNearCircleOperateMessageResponse other) : this() {
      nearCircleOperateMessageContent_ = other.nearCircleOperateMessageContent_ != null ? other.nearCircleOperateMessageContent_.Clone() : null;
      buildTime_ = other.buildTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImNearCircleOperateMessageResponse Clone() {
      return new ImNearCircleOperateMessageResponse(this);
    }

    /// <summary>Field number for the "nearCircleOperateMessageContent" field.</summary>
    public const int NearCircleOperateMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImNearCircleOperateMessageContent nearCircleOperateMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImNearCircleOperateMessageContent NearCircleOperateMessageContent {
      get { return nearCircleOperateMessageContent_; }
      set {
        nearCircleOperateMessageContent_ = value;
      }
    }

    /// <summary>Field number for the "buildTime" field.</summary>
    public const int BuildTimeFieldNumber = 2;
    private ulong buildTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BuildTime {
      get { return buildTime_; }
      set {
        buildTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImNearCircleOperateMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImNearCircleOperateMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NearCircleOperateMessageContent, other.NearCircleOperateMessageContent)) return false;
      if (BuildTime != other.BuildTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (nearCircleOperateMessageContent_ != null) hash ^= NearCircleOperateMessageContent.GetHashCode();
      if (BuildTime != 0UL) hash ^= BuildTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (nearCircleOperateMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NearCircleOperateMessageContent);
      }
      if (BuildTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BuildTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (nearCircleOperateMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NearCircleOperateMessageContent);
      }
      if (BuildTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BuildTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImNearCircleOperateMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.nearCircleOperateMessageContent_ != null) {
        if (nearCircleOperateMessageContent_ == null) {
          nearCircleOperateMessageContent_ = new global::HWL.IMCore.Protocol.ImNearCircleOperateMessageContent();
        }
        NearCircleOperateMessageContent.MergeFrom(other.NearCircleOperateMessageContent);
      }
      if (other.BuildTime != 0UL) {
        BuildTime = other.BuildTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nearCircleOperateMessageContent_ == null) {
              nearCircleOperateMessageContent_ = new global::HWL.IMCore.Protocol.ImNearCircleOperateMessageContent();
            }
            input.ReadMessage(nearCircleOperateMessageContent_);
            break;
          }
          case 16: {
            BuildTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImNearCircleOperateMessageContent : pb::IMessage<ImNearCircleOperateMessageContent> {
    private static readonly pb::MessageParser<ImNearCircleOperateMessageContent> _parser = new pb::MessageParser<ImNearCircleOperateMessageContent>(() => new ImNearCircleOperateMessageContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImNearCircleOperateMessageContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImNearCircleOperateMessageContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImNearCircleOperateMessageContent(ImNearCircleOperateMessageContent other) : this() {
      operateType_ = other.operateType_;
      postUser_ = other.postUser_ != null ? other.postUser_.Clone() : null;
      originUser_ = other.originUser_ != null ? other.originUser_.Clone() : null;
      replyUser_ = other.replyUser_ != null ? other.replyUser_.Clone() : null;
      nearCircleId_ = other.nearCircleId_;
      commentId_ = other.commentId_;
      commentCont_ = other.commentCont_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImNearCircleOperateMessageContent Clone() {
      return new ImNearCircleOperateMessageContent(this);
    }

    /// <summary>Field number for the "operateType" field.</summary>
    public const int OperateTypeFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImCircleOperateType operateType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImCircleOperateType OperateType {
      get { return operateType_; }
      set {
        operateType_ = value;
      }
    }

    /// <summary>Field number for the "postUser" field.</summary>
    public const int PostUserFieldNumber = 2;
    private global::HWL.IMCore.Protocol.ImUserContent postUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImUserContent PostUser {
      get { return postUser_; }
      set {
        postUser_ = value;
      }
    }

    /// <summary>Field number for the "originUser" field.</summary>
    public const int OriginUserFieldNumber = 3;
    private global::HWL.IMCore.Protocol.ImUserContent originUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImUserContent OriginUser {
      get { return originUser_; }
      set {
        originUser_ = value;
      }
    }

    /// <summary>Field number for the "replyUser" field.</summary>
    public const int ReplyUserFieldNumber = 4;
    private global::HWL.IMCore.Protocol.ImUserContent replyUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImUserContent ReplyUser {
      get { return replyUser_; }
      set {
        replyUser_ = value;
      }
    }

    /// <summary>Field number for the "nearCircleId" field.</summary>
    public const int NearCircleIdFieldNumber = 5;
    private ulong nearCircleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong NearCircleId {
      get { return nearCircleId_; }
      set {
        nearCircleId_ = value;
      }
    }

    /// <summary>Field number for the "commentId" field.</summary>
    public const int CommentIdFieldNumber = 6;
    private ulong commentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CommentId {
      get { return commentId_; }
      set {
        commentId_ = value;
      }
    }

    /// <summary>Field number for the "commentCont" field.</summary>
    public const int CommentContFieldNumber = 7;
    private string commentCont_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommentCont {
      get { return commentCont_; }
      set {
        commentCont_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImNearCircleOperateMessageContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImNearCircleOperateMessageContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperateType != other.OperateType) return false;
      if (!object.Equals(PostUser, other.PostUser)) return false;
      if (!object.Equals(OriginUser, other.OriginUser)) return false;
      if (!object.Equals(ReplyUser, other.ReplyUser)) return false;
      if (NearCircleId != other.NearCircleId) return false;
      if (CommentId != other.CommentId) return false;
      if (CommentCont != other.CommentCont) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OperateType != 0) hash ^= OperateType.GetHashCode();
      if (postUser_ != null) hash ^= PostUser.GetHashCode();
      if (originUser_ != null) hash ^= OriginUser.GetHashCode();
      if (replyUser_ != null) hash ^= ReplyUser.GetHashCode();
      if (NearCircleId != 0UL) hash ^= NearCircleId.GetHashCode();
      if (CommentId != 0UL) hash ^= CommentId.GetHashCode();
      if (CommentCont.Length != 0) hash ^= CommentCont.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OperateType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OperateType);
      }
      if (postUser_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PostUser);
      }
      if (originUser_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OriginUser);
      }
      if (replyUser_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReplyUser);
      }
      if (NearCircleId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(NearCircleId);
      }
      if (CommentId != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(CommentId);
      }
      if (CommentCont.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CommentCont);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OperateType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperateType);
      }
      if (postUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostUser);
      }
      if (originUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginUser);
      }
      if (replyUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReplyUser);
      }
      if (NearCircleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NearCircleId);
      }
      if (CommentId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CommentId);
      }
      if (CommentCont.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommentCont);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImNearCircleOperateMessageContent other) {
      if (other == null) {
        return;
      }
      if (other.OperateType != 0) {
        OperateType = other.OperateType;
      }
      if (other.postUser_ != null) {
        if (postUser_ == null) {
          postUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
        }
        PostUser.MergeFrom(other.PostUser);
      }
      if (other.originUser_ != null) {
        if (originUser_ == null) {
          originUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
        }
        OriginUser.MergeFrom(other.OriginUser);
      }
      if (other.replyUser_ != null) {
        if (replyUser_ == null) {
          replyUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
        }
        ReplyUser.MergeFrom(other.ReplyUser);
      }
      if (other.NearCircleId != 0UL) {
        NearCircleId = other.NearCircleId;
      }
      if (other.CommentId != 0UL) {
        CommentId = other.CommentId;
      }
      if (other.CommentCont.Length != 0) {
        CommentCont = other.CommentCont;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            operateType_ = (global::HWL.IMCore.Protocol.ImCircleOperateType) input.ReadEnum();
            break;
          }
          case 18: {
            if (postUser_ == null) {
              postUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
            }
            input.ReadMessage(postUser_);
            break;
          }
          case 26: {
            if (originUser_ == null) {
              originUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
            }
            input.ReadMessage(originUser_);
            break;
          }
          case 34: {
            if (replyUser_ == null) {
              replyUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
            }
            input.ReadMessage(replyUser_);
            break;
          }
          case 40: {
            NearCircleId = input.ReadUInt64();
            break;
          }
          case 48: {
            CommentId = input.ReadUInt64();
            break;
          }
          case 58: {
            CommentCont = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///circle operate message
  /// </summary>
  public sealed partial class ImCircleOperateMessageRequest : pb::IMessage<ImCircleOperateMessageRequest> {
    private static readonly pb::MessageParser<ImCircleOperateMessageRequest> _parser = new pb::MessageParser<ImCircleOperateMessageRequest>(() => new ImCircleOperateMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImCircleOperateMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImCircleOperateMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImCircleOperateMessageRequest(ImCircleOperateMessageRequest other) : this() {
      circleOperateMessageContent_ = other.circleOperateMessageContent_ != null ? other.circleOperateMessageContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImCircleOperateMessageRequest Clone() {
      return new ImCircleOperateMessageRequest(this);
    }

    /// <summary>Field number for the "circleOperateMessageContent" field.</summary>
    public const int CircleOperateMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImCircleOperateMessageContent circleOperateMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImCircleOperateMessageContent CircleOperateMessageContent {
      get { return circleOperateMessageContent_; }
      set {
        circleOperateMessageContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImCircleOperateMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImCircleOperateMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CircleOperateMessageContent, other.CircleOperateMessageContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (circleOperateMessageContent_ != null) hash ^= CircleOperateMessageContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (circleOperateMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CircleOperateMessageContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (circleOperateMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CircleOperateMessageContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImCircleOperateMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.circleOperateMessageContent_ != null) {
        if (circleOperateMessageContent_ == null) {
          circleOperateMessageContent_ = new global::HWL.IMCore.Protocol.ImCircleOperateMessageContent();
        }
        CircleOperateMessageContent.MergeFrom(other.CircleOperateMessageContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (circleOperateMessageContent_ == null) {
              circleOperateMessageContent_ = new global::HWL.IMCore.Protocol.ImCircleOperateMessageContent();
            }
            input.ReadMessage(circleOperateMessageContent_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImCircleOperateMessageResponse : pb::IMessage<ImCircleOperateMessageResponse> {
    private static readonly pb::MessageParser<ImCircleOperateMessageResponse> _parser = new pb::MessageParser<ImCircleOperateMessageResponse>(() => new ImCircleOperateMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImCircleOperateMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImCircleOperateMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImCircleOperateMessageResponse(ImCircleOperateMessageResponse other) : this() {
      circleOperateMessageContent_ = other.circleOperateMessageContent_ != null ? other.circleOperateMessageContent_.Clone() : null;
      buildTime_ = other.buildTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImCircleOperateMessageResponse Clone() {
      return new ImCircleOperateMessageResponse(this);
    }

    /// <summary>Field number for the "circleOperateMessageContent" field.</summary>
    public const int CircleOperateMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImCircleOperateMessageContent circleOperateMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImCircleOperateMessageContent CircleOperateMessageContent {
      get { return circleOperateMessageContent_; }
      set {
        circleOperateMessageContent_ = value;
      }
    }

    /// <summary>Field number for the "buildTime" field.</summary>
    public const int BuildTimeFieldNumber = 2;
    private ulong buildTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BuildTime {
      get { return buildTime_; }
      set {
        buildTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImCircleOperateMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImCircleOperateMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CircleOperateMessageContent, other.CircleOperateMessageContent)) return false;
      if (BuildTime != other.BuildTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (circleOperateMessageContent_ != null) hash ^= CircleOperateMessageContent.GetHashCode();
      if (BuildTime != 0UL) hash ^= BuildTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (circleOperateMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CircleOperateMessageContent);
      }
      if (BuildTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BuildTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (circleOperateMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CircleOperateMessageContent);
      }
      if (BuildTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BuildTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImCircleOperateMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.circleOperateMessageContent_ != null) {
        if (circleOperateMessageContent_ == null) {
          circleOperateMessageContent_ = new global::HWL.IMCore.Protocol.ImCircleOperateMessageContent();
        }
        CircleOperateMessageContent.MergeFrom(other.CircleOperateMessageContent);
      }
      if (other.BuildTime != 0UL) {
        BuildTime = other.BuildTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (circleOperateMessageContent_ == null) {
              circleOperateMessageContent_ = new global::HWL.IMCore.Protocol.ImCircleOperateMessageContent();
            }
            input.ReadMessage(circleOperateMessageContent_);
            break;
          }
          case 16: {
            BuildTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImCircleOperateMessageContent : pb::IMessage<ImCircleOperateMessageContent> {
    private static readonly pb::MessageParser<ImCircleOperateMessageContent> _parser = new pb::MessageParser<ImCircleOperateMessageContent>(() => new ImCircleOperateMessageContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImCircleOperateMessageContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImCircleOperateMessageContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImCircleOperateMessageContent(ImCircleOperateMessageContent other) : this() {
      operateType_ = other.operateType_;
      postUser_ = other.postUser_ != null ? other.postUser_.Clone() : null;
      originUser_ = other.originUser_ != null ? other.originUser_.Clone() : null;
      replyUser_ = other.replyUser_ != null ? other.replyUser_.Clone() : null;
      circleId_ = other.circleId_;
      commentId_ = other.commentId_;
      commentCont_ = other.commentCont_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImCircleOperateMessageContent Clone() {
      return new ImCircleOperateMessageContent(this);
    }

    /// <summary>Field number for the "operateType" field.</summary>
    public const int OperateTypeFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImCircleOperateType operateType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImCircleOperateType OperateType {
      get { return operateType_; }
      set {
        operateType_ = value;
      }
    }

    /// <summary>Field number for the "postUser" field.</summary>
    public const int PostUserFieldNumber = 2;
    private global::HWL.IMCore.Protocol.ImUserContent postUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImUserContent PostUser {
      get { return postUser_; }
      set {
        postUser_ = value;
      }
    }

    /// <summary>Field number for the "originUser" field.</summary>
    public const int OriginUserFieldNumber = 3;
    private global::HWL.IMCore.Protocol.ImUserContent originUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImUserContent OriginUser {
      get { return originUser_; }
      set {
        originUser_ = value;
      }
    }

    /// <summary>Field number for the "replyUser" field.</summary>
    public const int ReplyUserFieldNumber = 4;
    private global::HWL.IMCore.Protocol.ImUserContent replyUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImUserContent ReplyUser {
      get { return replyUser_; }
      set {
        replyUser_ = value;
      }
    }

    /// <summary>Field number for the "circleId" field.</summary>
    public const int CircleIdFieldNumber = 5;
    private ulong circleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CircleId {
      get { return circleId_; }
      set {
        circleId_ = value;
      }
    }

    /// <summary>Field number for the "commentId" field.</summary>
    public const int CommentIdFieldNumber = 6;
    private ulong commentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CommentId {
      get { return commentId_; }
      set {
        commentId_ = value;
      }
    }

    /// <summary>Field number for the "commentCont" field.</summary>
    public const int CommentContFieldNumber = 7;
    private string commentCont_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommentCont {
      get { return commentCont_; }
      set {
        commentCont_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImCircleOperateMessageContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImCircleOperateMessageContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperateType != other.OperateType) return false;
      if (!object.Equals(PostUser, other.PostUser)) return false;
      if (!object.Equals(OriginUser, other.OriginUser)) return false;
      if (!object.Equals(ReplyUser, other.ReplyUser)) return false;
      if (CircleId != other.CircleId) return false;
      if (CommentId != other.CommentId) return false;
      if (CommentCont != other.CommentCont) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OperateType != 0) hash ^= OperateType.GetHashCode();
      if (postUser_ != null) hash ^= PostUser.GetHashCode();
      if (originUser_ != null) hash ^= OriginUser.GetHashCode();
      if (replyUser_ != null) hash ^= ReplyUser.GetHashCode();
      if (CircleId != 0UL) hash ^= CircleId.GetHashCode();
      if (CommentId != 0UL) hash ^= CommentId.GetHashCode();
      if (CommentCont.Length != 0) hash ^= CommentCont.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OperateType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OperateType);
      }
      if (postUser_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PostUser);
      }
      if (originUser_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OriginUser);
      }
      if (replyUser_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReplyUser);
      }
      if (CircleId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CircleId);
      }
      if (CommentId != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(CommentId);
      }
      if (CommentCont.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CommentCont);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OperateType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperateType);
      }
      if (postUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostUser);
      }
      if (originUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginUser);
      }
      if (replyUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReplyUser);
      }
      if (CircleId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CircleId);
      }
      if (CommentId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CommentId);
      }
      if (CommentCont.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommentCont);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImCircleOperateMessageContent other) {
      if (other == null) {
        return;
      }
      if (other.OperateType != 0) {
        OperateType = other.OperateType;
      }
      if (other.postUser_ != null) {
        if (postUser_ == null) {
          postUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
        }
        PostUser.MergeFrom(other.PostUser);
      }
      if (other.originUser_ != null) {
        if (originUser_ == null) {
          originUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
        }
        OriginUser.MergeFrom(other.OriginUser);
      }
      if (other.replyUser_ != null) {
        if (replyUser_ == null) {
          replyUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
        }
        ReplyUser.MergeFrom(other.ReplyUser);
      }
      if (other.CircleId != 0UL) {
        CircleId = other.CircleId;
      }
      if (other.CommentId != 0UL) {
        CommentId = other.CommentId;
      }
      if (other.CommentCont.Length != 0) {
        CommentCont = other.CommentCont;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            operateType_ = (global::HWL.IMCore.Protocol.ImCircleOperateType) input.ReadEnum();
            break;
          }
          case 18: {
            if (postUser_ == null) {
              postUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
            }
            input.ReadMessage(postUser_);
            break;
          }
          case 26: {
            if (originUser_ == null) {
              originUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
            }
            input.ReadMessage(originUser_);
            break;
          }
          case 34: {
            if (replyUser_ == null) {
              replyUser_ = new global::HWL.IMCore.Protocol.ImUserContent();
            }
            input.ReadMessage(replyUser_);
            break;
          }
          case 40: {
            CircleId = input.ReadUInt64();
            break;
          }
          case 48: {
            CommentId = input.ReadUInt64();
            break;
          }
          case 58: {
            CommentCont = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImSystemMessageRequest : pb::IMessage<ImSystemMessageRequest> {
    private static readonly pb::MessageParser<ImSystemMessageRequest> _parser = new pb::MessageParser<ImSystemMessageRequest>(() => new ImSystemMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImSystemMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImSystemMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImSystemMessageRequest(ImSystemMessageRequest other) : this() {
      toUserId_ = other.toUserId_;
      toGroupGuid_ = other.toGroupGuid_;
      systemMessageContent_ = other.systemMessageContent_ != null ? other.systemMessageContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImSystemMessageRequest Clone() {
      return new ImSystemMessageRequest(this);
    }

    /// <summary>Field number for the "toUserId" field.</summary>
    public const int ToUserIdFieldNumber = 1;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "toGroupGuid" field.</summary>
    public const int ToGroupGuidFieldNumber = 2;
    private string toGroupGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToGroupGuid {
      get { return toGroupGuid_; }
      set {
        toGroupGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "systemMessageContent" field.</summary>
    public const int SystemMessageContentFieldNumber = 3;
    private global::HWL.IMCore.Protocol.ImSystemMessageContent systemMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImSystemMessageContent SystemMessageContent {
      get { return systemMessageContent_; }
      set {
        systemMessageContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImSystemMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImSystemMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ToUserId != other.ToUserId) return false;
      if (ToGroupGuid != other.ToGroupGuid) return false;
      if (!object.Equals(SystemMessageContent, other.SystemMessageContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (ToGroupGuid.Length != 0) hash ^= ToGroupGuid.GetHashCode();
      if (systemMessageContent_ != null) hash ^= SystemMessageContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ToUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ToUserId);
      }
      if (ToGroupGuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ToGroupGuid);
      }
      if (systemMessageContent_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SystemMessageContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (ToGroupGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToGroupGuid);
      }
      if (systemMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemMessageContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImSystemMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.ToGroupGuid.Length != 0) {
        ToGroupGuid = other.ToGroupGuid;
      }
      if (other.systemMessageContent_ != null) {
        if (systemMessageContent_ == null) {
          systemMessageContent_ = new global::HWL.IMCore.Protocol.ImSystemMessageContent();
        }
        SystemMessageContent.MergeFrom(other.SystemMessageContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 18: {
            ToGroupGuid = input.ReadString();
            break;
          }
          case 26: {
            if (systemMessageContent_ == null) {
              systemMessageContent_ = new global::HWL.IMCore.Protocol.ImSystemMessageContent();
            }
            input.ReadMessage(systemMessageContent_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImSystemMessageResponse : pb::IMessage<ImSystemMessageResponse> {
    private static readonly pb::MessageParser<ImSystemMessageResponse> _parser = new pb::MessageParser<ImSystemMessageResponse>(() => new ImSystemMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImSystemMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImSystemMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImSystemMessageResponse(ImSystemMessageResponse other) : this() {
      systemMessageContent_ = other.systemMessageContent_ != null ? other.systemMessageContent_.Clone() : null;
      buildTime_ = other.buildTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImSystemMessageResponse Clone() {
      return new ImSystemMessageResponse(this);
    }

    /// <summary>Field number for the "systemMessageContent" field.</summary>
    public const int SystemMessageContentFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImSystemMessageContent systemMessageContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImSystemMessageContent SystemMessageContent {
      get { return systemMessageContent_; }
      set {
        systemMessageContent_ = value;
      }
    }

    /// <summary>Field number for the "buildTime" field.</summary>
    public const int BuildTimeFieldNumber = 2;
    private ulong buildTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BuildTime {
      get { return buildTime_; }
      set {
        buildTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImSystemMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImSystemMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SystemMessageContent, other.SystemMessageContent)) return false;
      if (BuildTime != other.BuildTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (systemMessageContent_ != null) hash ^= SystemMessageContent.GetHashCode();
      if (BuildTime != 0UL) hash ^= BuildTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (systemMessageContent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SystemMessageContent);
      }
      if (BuildTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BuildTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (systemMessageContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemMessageContent);
      }
      if (BuildTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BuildTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImSystemMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.systemMessageContent_ != null) {
        if (systemMessageContent_ == null) {
          systemMessageContent_ = new global::HWL.IMCore.Protocol.ImSystemMessageContent();
        }
        SystemMessageContent.MergeFrom(other.SystemMessageContent);
      }
      if (other.BuildTime != 0UL) {
        BuildTime = other.BuildTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (systemMessageContent_ == null) {
              systemMessageContent_ = new global::HWL.IMCore.Protocol.ImSystemMessageContent();
            }
            input.ReadMessage(systemMessageContent_);
            break;
          }
          case 16: {
            BuildTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImSystemMessageContent : pb::IMessage<ImSystemMessageContent> {
    private static readonly pb::MessageParser<ImSystemMessageContent> _parser = new pb::MessageParser<ImSystemMessageContent>(() => new ImSystemMessageContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImSystemMessageContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HWL.IMCore.Protocol.ImMessageReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImSystemMessageContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImSystemMessageContent(ImSystemMessageContent other) : this() {
      systemMessageType_ = other.systemMessageType_;
      toUserDesc_ = other.toUserDesc_;
      addGroupDesc_ = other.addGroupDesc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImSystemMessageContent Clone() {
      return new ImSystemMessageContent(this);
    }

    /// <summary>Field number for the "systemMessageType" field.</summary>
    public const int SystemMessageTypeFieldNumber = 1;
    private global::HWL.IMCore.Protocol.ImSystemMessageType systemMessageType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HWL.IMCore.Protocol.ImSystemMessageType SystemMessageType {
      get { return systemMessageType_; }
      set {
        systemMessageType_ = value;
      }
    }

    /// <summary>Field number for the "toUserDesc" field.</summary>
    public const int ToUserDescFieldNumber = 2;
    private string toUserDesc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToUserDesc {
      get { return toUserDesc_; }
      set {
        toUserDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addGroupDesc" field.</summary>
    public const int AddGroupDescFieldNumber = 3;
    private string addGroupDesc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddGroupDesc {
      get { return addGroupDesc_; }
      set {
        addGroupDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImSystemMessageContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImSystemMessageContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SystemMessageType != other.SystemMessageType) return false;
      if (ToUserDesc != other.ToUserDesc) return false;
      if (AddGroupDesc != other.AddGroupDesc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SystemMessageType != 0) hash ^= SystemMessageType.GetHashCode();
      if (ToUserDesc.Length != 0) hash ^= ToUserDesc.GetHashCode();
      if (AddGroupDesc.Length != 0) hash ^= AddGroupDesc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SystemMessageType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SystemMessageType);
      }
      if (ToUserDesc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ToUserDesc);
      }
      if (AddGroupDesc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AddGroupDesc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SystemMessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SystemMessageType);
      }
      if (ToUserDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToUserDesc);
      }
      if (AddGroupDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddGroupDesc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImSystemMessageContent other) {
      if (other == null) {
        return;
      }
      if (other.SystemMessageType != 0) {
        SystemMessageType = other.SystemMessageType;
      }
      if (other.ToUserDesc.Length != 0) {
        ToUserDesc = other.ToUserDesc;
      }
      if (other.AddGroupDesc.Length != 0) {
        AddGroupDesc = other.AddGroupDesc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            systemMessageType_ = (global::HWL.IMCore.Protocol.ImSystemMessageType) input.ReadEnum();
            break;
          }
          case 18: {
            ToUserDesc = input.ReadString();
            break;
          }
          case 26: {
            AddGroupDesc = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
